--------------------KlipperScreen Log Start--------------------
Git Version: v0.2.8-54-g300eed4
2022-11-16 23:22:02,516 [screen.py:main()] - KlipperScreen version: v0.2.8-54-g300eed4
2022-11-16 23:22:02,518 [config.py:__init__()] - Config path location: /home/pi/printer_data/config/KlipperScreen.conf
2022-11-16 23:22:02,528 [config.py:log_config()] -  ===== Config File =====

=======================
2022-11-16 23:22:02,529 [config.py:__init__()] - ====== Saved Def ======

[main]
move_speed_xy = 30
print_sort_dir = date_desc
font_size = large

[displayed_macros Printer]
m701 = False
m125 = False
linear_advance = False
low_temp_check = False
g29 = False
unload_filament = False
load_filament = False

=======================
2022-11-16 23:22:02,531 [config.py:__init__()] - Configuration validated succesfuly
2022-11-16 23:22:02,532 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2022-11-16 23:22:02,579 [config.py:create_translations()] - Selected lang: None OS lang: en_GB.UTF-8
2022-11-16 23:22:02,579 [config.py:install_language()] - Using system lang
2022-11-16 23:22:02,579 [config.py:install_language()] - Using lang en
2022-11-16 23:22:02,738 [screen.py:__init__()] - Screen resolution: 800x480
2022-11-16 23:22:02,739 [KlippyGtk.py:__init__()] - img width: 51 height: 51
2022-11-16 23:22:02,831 [warnings.py:_showwarnmsg()] - /home/pi/KlipperScreen/screen.py:135: DeprecationWarning: Gdk.Cursor.new is deprecated
  self.get_window().set_cursor(Gdk.Cursor.new(Gdk.CursorType.BLANK_CURSOR))

2022-11-16 23:22:02,851 [screen.py:_load_panel()] - Loading panel: splash_screen
2022-11-16 23:22:02,851 [screen.py:_load_panel()] - Panel path: /home/pi/KlipperScreen/panels/splash_screen.py
2022-11-16 23:22:02,897 [screen.py:show_panel()] - Attaching panel splash_screen
2022-11-16 23:22:02,898 [screen.py:show_panel()] - Showing back. count: 0
2022-11-16 23:22:02,903 [screen.py:show_panel()] - Current panel hierarchy: ['splash_screen']
2022-11-16 23:22:02,940 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2022-11-16 23:22:02,963 [screen.py:set_screenblanking_timeout()] - Using DPMS
2022-11-16 23:22:03,000 [screen.py:initial_connection()] - Default printer: None
2022-11-16 23:22:03,000 [screen.py:connect_printer()] - Connecting to printer: Printer
2022-11-16 23:22:03,002 [screen.py:show_panel()] - Attaching panel splash_screen
2022-11-16 23:22:03,006 [screen.py:show_panel()] - Showing back. count: 0
2022-11-16 23:22:03,007 [screen.py:show_panel()] - Current panel hierarchy: ['splash_screen']
2022-11-16 23:22:03,010 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/server/info
2022-11-16 23:22:03,029 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2022-11-16 23:22:03,040 [KlippyWebsocket.py:connect()] - Starting websocket thread
2022-11-16 23:22:03,042 [screen.py:connect_printer()] - Connected to printer: Printer
2022-11-16 23:22:03,049 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2022-11-16 23:22:03,049 [KlippyWebsocket.py:on_open()] - Self.connected = False
2022-11-16 23:22:03,057 [_logging.py:warning()] - websocket connected
2022-11-16 23:22:03,077 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/server/info
2022-11-16 23:22:03,085 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2022-11-16 23:22:03,095 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/info
2022-11-16 23:22:03,105 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object
2022-11-16 23:22:03,263 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2022-11-16 23:22:03,516 [printer.py:reinit()] - Moonraker object status: {'configfile': {'save_config_pending_items': {}, 'warnings': [], 'config': {'respond': {}, 'force_move': {'enable_force_move': 'True'}, 'gcode_macro _klicky_status_cleaning': {'gcode': '\n{% if printer[\'gcode_macro status_cleaning\'] is defined %}\n_KlickyDebug msg="_klicky_status_cleaning activating the LED STATUS_CLEANING"\nSTATUS_CLEANING\n{% endif %}'}, 'gcode_macro _Probe_Unlock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to False"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }', 'description': 'Unlocks Klicky Probe state'}, 'pause_resume': {}, 'z_tilt': {'retries': '6', 'horizontal_move_z': '10', 'z_positions': '418,189\n-88,189', 'retry_tolerance': '0.0075', 'points': '324,189\n44,189', 'speed': '500'}, 'probe': {'samples_tolerance_retries': '3', 'x_offset': '-19.5', 'pin': 'P1.27', 'samples_result': 'median', 'sample_retract_dist': '4.0', 'samples_tolerance': '.02', 'lift_speed': '8', 'y_offset': '-27', 'samples': '1', 'z_offset': '5.2', 'speed': '10'}, 'output_pin LED': {'shutdown_value': '0', 'scale': '100', 'cycle_time': '0.01', 'pin': 'P2.4', 'value': '0', 'pwm': 'true'}, 'gcode_macro M600': {'gcode': '\n{% set X = params.X|default(50)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set Z = params.Z|default(10)|float %}\nSAVE_GCODE_STATE NAME=M600_state\nPAUSE\nG91\nG1 Z{Z}\nG90\nG1 X{X} Y{Y} F3000\nG91\nRESTORE_GCODE_STATE NAME=M600_state'}, 'gcode_macro _klicky_status_busy': {'gcode': '\n{% if printer[\'gcode_macro status_busy\'] is defined %}\n_KlickyDebug msg="_klicky_status_busy activating the LED STATUS_BUSY"\nSTATUS_BUSY\n{% endif %}'}, 'gcode_macro lift_z': {'gcode': '\nG91\nG0 Z10 F2000\nG90'}, 'gcode_macro PRIME_LINE': {'gcode': '\nM117 Prime Line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X20 Y30 Z0.28 F5000.0 ;Move to start position\nG1 X20 Y190.0 Z0.28 F1500.0 E15 ;Draw the first line\nG1 X22 Y190.0 Z0.28 F5000.0 ;Move to side a little\nG1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line\nG92 E0 ;Reset Extruder\nG1 E-2 F500\nG92 E0.0\nG1 Z2.0 F1000 ;Move Z Axis up\nlift_z'}, 'gcode_macro _User_Variables': {'variable_dock_on_zhome': 'True', 'variable_park_toolhead': 'False', 'variable_servo_delay': '250', 'variable_z_drop_speed': '10', 'variable_enable_z_hop': 'True', 'variable_umbilical': 'False', 'variable_servo_retract': '11', 'variable_docklocation_y': '32.5', 'variable_docklocation_x': '-10', 'variable_move_accel': '1000', 'variable_docklocation_z': '-128', 'variable_safe_z': '12', 'variable_attachmove2_x': '0', 'variable_dock_speed': '50', 'variable_attachmove2_z': '0', 'variable_servo_name': "'NAME'", 'variable_attachmove_z': '0', 'variable_attachmove_y': '0', 'variable_attachmove_x': '-20', 'variable_release_speed': '75', 'variable_dockmove_z': '0', 'gcode': '\n{% set Mx = printer[\'configfile\'].config["stepper_x"]["position_max"]|float %}\n{% set My = printer[\'configfile\'].config["stepper_y"]["position_max"]|float %}\n{% set Ox = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set Oy = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% set Oz = printer[\'configfile\'].config["probe"]["z_offset"]|float %}\n{% if z_endstop_x != 0 or z_endstop_y != 0 %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }\n{% endif %}', 'variable_override_homing': "''", 'variable_servo_deploy': '10', 'variable_version': '1', 'variable_umbilical_x': '15', 'variable_umbilical_y': '15', 'variable_parkposition_x': '125', 'variable_parkposition_y': '125', 'variable_parkposition_z': '12', 'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'variable_dockmove_y': '40', 'variable_dockmove_x': '0', 'variable_attachmove2_y': '0', 'variable_enable_dock_servo': 'False', 'variable_verbose': 'True', 'variable_max_bed_x': '330', 'variable_max_bed_y': '325', 'variable_travel_speed': '200', 'variable_home_backoff_y': '5', 'variable_home_backoff_x': '5', 'variable_debug': 'False'}, 'filament_switch_sensor RunoutSensor': {'runout_gcode': 'M600', 'switch_pin': 'P1.26', 'pause_on_runout': 'true'}, 'gcode_macro LOW_TEMP_CHECK': {'gcode': '\n{% set T = params.T|default(210) %}\n{% if printer.extruder.target != 0 %}\n{% if printer.extruder.temperature < printer.extruder.target %}\nM117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.\nM109 S{printer.extruder.target|float}\n{% endif %}\n{% else %}\n{% if printer.extruder.target < T %}\nM117 No setpoint, heating to {T}.\nM109 S{T}\n{% endif %}\n{% endif %}'}, 'gcode_macro LED_on': {'gcode': '\nSET_PIN PIN=LED VALUE=100'}, 'heater_bed': {'control': 'pid', 'pid_kp': '53.533', 'sensor_pin': 'P0.25', 'heater_pin': 'P2.5', 'sensor_type': 'Generic 3950', 'pid_kd': '662.471', 'pid_ki': '1.081', 'min_temp': '0', 'max_temp': '130'}, 'gcode_macro Attach_Probe_Lock': {'gcode': '\nAttach_Probe\n_Probe_Lock', 'description': 'Attaches Klicky Probe, can only be docked after unlocking'}, 'bed_mesh default': {'tension': '0.2', 'min_x': '10.0', 'min_y': '10.0', 'y_count': '4', 'mesh_y_pps': '3', 'x_count': '4', 'version': '1', 'algo': 'bicubic', 'mesh_x_pps': '2', 'max_y': '289.99', 'max_x': '310.0', 'points': '\n-0.052500, 0.005625, -0.056875, 0.003125\n-0.195000, -0.056875, -0.094375, -0.076875\n-0.144375, 0.001250, -0.084375, -0.134375\n-0.020625, -0.024375, -0.017500, -0.043125'}, 'virtual_sdcard': {'path': '~/gcode_files'}, 'gcode_macro _Park_Toolhead': {'gcode': '\n{% set park_toolhead = printer["gcode_macro _User_Variables"].park_toolhead %}\n{% set parkposition_x = printer["gcode_macro _User_Variables"].parkposition_x %}\n{% set parkposition_y = printer["gcode_macro _User_Variables"].parkposition_y %}\n{% set parkposition_z = printer["gcode_macro _User_Variables"].parkposition_z %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Park_Toolhead\n{% if park_toolhead and \'xyz\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Parking Toolhead") }\n{% endif %}\n{% if parkposition_z == -128 %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}\n{% endif %}\n{% endif %}\n_exit_point function=Park_Toolhead'}, 'gcode_macro _SetProbeState': {'gcode': '\n{% set query_probe_triggered = printer.probe.last_query %}\n{% set action  = params.ACTION|default(\'\') %}\n{% if query_probe_triggered %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ False }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ True }\n{% endif %}\n{% if action == \'query\' %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_state VALUE={ query_probe_triggered }\n{% endif %}\n{% if not query_probe_triggered and action == \'dock\' %}\n{ action_raise_error("Probe dock failed!") }\n{% endif %}\n{% if query_probe_triggered and action == \'attach\' %}\n{ action_raise_error("Probe attach failed!") }\n{% endif %}'}, 'gcode_macro PRINT_END': {'gcode': '\nM400                           ; wait for moves to finish\nG91 ;Relative positioning\nG1 E-2 F2700 ;Retract a bit\nG1 E-2 Z0.2 F2400 ;Retract and raise Z\nG1 X5 Y5 F3000 ;Wipe out\nG1 Z10 ;Raise Z more\nG90 ;Absolute positioning\nG28 X Y ;Present print\nM106 S0 ;Turn-off fan\nM104 S0 ;Turn-off hotend\nM140 S0 ;Turn-off bed\nM84 X Y E ;Disable all steppers but Z'}, 'stepper_z': {'endstop_pin': 'probe:z_virtual_endstop', 'rotation_distance': '2', 'step_pin': 'P0.22', 'position_min': '-2', 'microsteps': '16', 'dir_pin': '!P2.11', 'position_max': '350', 'enable_pin': '!P0.21'}, 'stepper_y': {'homing_retract_dist': '0', 'position_endstop': '325', 'full_steps_per_rotation': '200', 'endstop_pin': '!P1.28', 'rotation_distance': '40', 'second_homing_speed': '10', 'step_pin': 'P0.19', 'position_min': '-1', 'microsteps': '16', 'homing_speed': '60', 'dir_pin': 'P0.20', 'position_max': '325', 'enable_pin': '!P2.8'}, 'stepper_x': {'homing_retract_dist': '0', 'position_endstop': '329', 'full_steps_per_rotation': '200', 'endstop_pin': '!P1.29', 'rotation_distance': '40', 'second_homing_speed': '10', 'step_pin': 'P2.2', 'position_min': '-10', 'microsteps': '16', 'homing_speed': '60', 'dir_pin': 'P2.6', 'position_max': '329', 'enable_pin': '!P2.1'}, 'input_shaper': {'shaper_freq_x': '93.2', 'shaper_freq_y': '52.4', 'shaper_type_x': 'zv', 'shaper_type_y': 'mzv'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}\nG90 ; use absolute coordinates\nM83 ; extruder relative mode\nM104 S150 ; set extruder temp 150c for auto bed leveling\nM140 S{BED_TEMP} ; set bed temp\nM190 S{BED_TEMP} ; wait for bed temp\nM104 S{EXTRUDER_TEMP} ; set extruder temp\nM109 S{EXTRUDER_TEMP} ; wait for extruder temp\nG28 ; home all\nG1 Z5 F240 ; lower bed before moving\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X60 Y5 Z0.2 F5000.0 ;Move to start position\nG1 X60 E9 F1000 ; intro line\nG1 X100 E12.5 F1000 ; intro line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up'}, 'gcode_macro Attach_Probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set attachmove2_x = printer["gcode_macro _User_Variables"].attachmove2_x|default(0) %}\n{% set attachmove2_y = printer["gcode_macro _User_Variables"].attachmove2_y|default(0) %}\n{% set attachmove2_z = printer["gcode_macro _User_Variables"].attachmove2_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n_entry_point function=Attach_Probe\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n_KlickyDebug msg="Attach_Probe Axis homed"\n{% elif not probe_attached and not probe_lock %}\n_KlickyDebug msg="Attach_Probe going to attach probe"\n{% if verbose %}\n{ action_respond_info("Attaching Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% if not enable_z_hop %}\n_KlickyDebug msg="Attach_Probe z_hop disabled"\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero, duplicate?") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm, duplicate?"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_entry_point function=Attach_Probe_intern\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}"\nG0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Attach_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\n_CheckProbe action=attach\n_exit_point function=Attach_Probe_intern move={goback}\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe locked not attaching probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already attached!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe already attached, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Attach_Probe', 'description': 'Attaches Klicky Probe'}, 'gcode_macro filament_laduj': {'gcode': "\nSAVE_GCODE_STATE NAME=load_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Loading filament...\nG0 E70 F600\nG4 P1000\nG0 E70 F200\nM400e\nM117 Filament loaded!\nRESTORE_GCODE_STATE NAME=load_state"}, 'gcode_macro _Homing_Variables': {'gcode': '\n{% set reset  = params.RESET|default(0) %}\n{% if reset %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }\n{% endif %}'}, 'gcode_macro _exit_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move  = params.MOVE|default(0) %}\n{% set speed = printer["gcode_macro _User_Variables"].travel_speed %}\nM400\nSET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}\nSET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\nRESTORE_GCODE_STATE NAME={function} MOVE={move} MOVE_SPEED={speed}'}, 'gcode_macro _KlickyDebug': {'gcode': '\n{% set message  = params.MSG %}\n{% set debug = printer["gcode_macro _User_Variables"].debug|default(False) %}\n{% if debug %}\n{ action_respond_info(message) }\n{% endif %}'}, 'gcode_macro _entry_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move_accel = printer["gcode_macro _User_Variables"].move_accel|default(1000) %}\nM400\nSAVE_GCODE_STATE NAME={function}\nSET_GCODE_OFFSET Z=0\nG90\nSET_VELOCITY_LIMIT ACCEL={move_accel}'}, 'tmc2208 stepper_z1': {'uart_pin': 'P1.4', 'hold_current': '0.200', 'stealthchop_threshold': '50', 'run_current': '0.70'}, 'gcode_macro _klicky_status_ready': {'gcode': '\n{% if printer[\'gcode_macro status_ready\'] is defined %}\n_KlickyDebug msg="_klicky_status_ready activating the LED STATUS_READY"\nSTATUS_READY\n{% endif %}'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Z Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe\nG28 Z0'}, 'gcode_macro Dock_Probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe Axis homed"\n_entry_point function=Dock_Probe\n{% if probe_attached and not probe_lock %}\n_KlickyDebug msg="Dock_Probe going to dock probe"\n{% if verbose %}\n{ action_respond_info("Docking Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Dock_Probe toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n_KlickyDebug msg="Dock_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}"\nG0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}\n{% endif %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n_KlickyDebug msg="Dock_Probe moving away from the dock to G0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Dock_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\nG4 P1000\n_CheckProbe action=dock\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe locked not docking probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already docked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe already docked, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Dock_Probe move={goback}', 'description': 'Docks Klicky Probe'}, 'printer': {'max_velocity': '700', 'max_z_velocity': '8', 'kinematics': 'corexy', 'max_accel': '8000', 'max_z_accel': '100'}, 'gcode_macro SCREWS_TILT_CALCULATE': {'rename_existing': '_SCREWS_TILT_CALCULATE', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Screws Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_SCREWS_TILT_CALCULATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe'}, 'gcode_macro _CheckProbe': {'variable_probe_state': '0', 'gcode': '\nQuery_Probe\n_SetProbeState action={ params.ACTION }'}, 'gcode_macro _Probe_Lock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to True"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ True }', 'description': 'Locks Klicky Probe state'}, 'tmc2209 stepper_y': {'uart_pin': 'P1.9', 'stealthchop_threshold': '0', 'run_current': '1.4', 'interpolate': 'False'}, 'gcode_macro RESUME': {'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro PAUSE': {'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}\n{% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'temperature_sensor zasilacz': {'min_temp': '0', 'sensor_type': 'Generic 3950', 'sensor_pin': 'P0.23', 'max_temp': '120'}, 'idle_timeout': {'gcode': '\nTURN_OFF_HEATERS\nM84; disable steppers'}, 'homing_override': {'gcode': '\n_User_Variables\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set kinematic_z = 0 %}\n{% set dock_on_zhome = printer["gcode_macro _User_Variables"].dock_on_zhome|default(True) %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set home_backoff_x = printer["gcode_macro _User_Variables"].home_backoff_x|default(0) %}\n{% set home_backoff_y = printer["gcode_macro _User_Variables"].home_backoff_y|default(0) %}\n{% set override_homing = printer["gcode_macro _User_Variables"].override_homing|default(\'\') %}\n_klicky_check_variables_version\n_CheckProbe action=query\n{% set home_x, home_y, home_z, leave_probe_attached = False, False, False, False %}\n{% if \'PROBE_LOCK\' in params%}\n{% if verbose %}\n{ action_respond_info("PROBE_LOCK = True") }\n{% endif %}\n{% set leave_probe_attached = True %}\n{% endif %}\n{% if not \'X\' in params\nand not \'Y\' in params\nand not \'Z\' in params %}\n{% set home_x, home_y, home_z = True, True, True %}\n_KlickyDebug msg="homing_override goint to home all axes"\n{% else %}\n{% if \'X\' in params %}\n{% set home_x = True %}\n_KlickyDebug msg="homing_override goint to home X"\n{% endif %}\n{% if \'Y\' in params %}\n{% set home_y = True %}\n_KlickyDebug msg="homing_override goint to home Y"\n{% endif %}\n{% if \'Z\' in params %}\n{% set home_z = True %}\n_KlickyDebug msg="homing_override goint to home Z"\n{% endif %}\n{% if \'X\' in params\nand \'Y\' in params\nand \'Z\' in params %}\n_Homing_Variables reset=1\n_KlickyDebug msg="homing_override goint to home all axes"\n{% endif %}\n{% endif %}\n_entry_point function=homing_override\n_KLICKY_STATUS_HOMING\n{% if \'z\' not in printer.toolhead.homed_axes %}\n{% if not enable_z_hop %}\n_KlickyDebug msg="homing_override z_hop disabled"\n{% set kinematic_z = safe_z %}\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if \'z\' in printer.toolhead.homed_axes %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, with homed axes, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% else %}\n{% if verbose %}\n{ action_respond_info("Z not homed, forcing full G28") }\n{% endif %}\n_KlickyDebug msg="homing_override Z not homed, setting position as X=Y=0 Z={kinematic_z}"\nSET_KINEMATIC_POSITION X=0 Y=0 Z={kinematic_z}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% set home_x, home_y, home_z = True, True, True %}\n{% endif %}\n{% endif %}\n{% if ((attachmove_y == 0 and override_homing == \'\' ) or (override_homing == \'Y\'))%}\n{% if home_y %}\n{% if override_homing == \'Y\' %}\n_KlickyDebug msg="homing_override Y homing first override, due to override_homing = Y"\n{% else %}\n_KlickyDebug msg="homing_override Y homing first override, due to attachmove_y = 0"\n{% endif %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop-home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% set home_y = False %}\n{% endif %}\n{% if home_x %}\n{% if verbose %}\n{ action_respond_info("Homing X") }\n{% endif %}\n{% if printer["gcode_macro _HOME_X"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_X external script to handle the X homing"\n_HOME_X\n{% else %}\n_KlickyDebug msg="homing_override Homing X, G28 X0"\nG28 X0\n{% if home_backoff_x != 0 %}\n{% if (printer.configfile.settings.stepper_x.position_endstop > (printer.configfile.settings.stepper_x.position_min|default(0) + printer.configfile.settings.stepper_x.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_y %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y, G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if verbose %}\n{ action_respond_info("Homing Z") }\n{% endif %}\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe configured as a virtual Z endstop attaching probe"\nAttach_Probe\n{% if leave_probe_attached %}\n_Probe_Lock\n{% endif %}\n{% elif dock_on_zhome == True %}\nDock_Probe\n{% endif %}\n_Home_Z\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe no longer required, docking probe"\nDock_Probe\n{% elif dock_on_zhome == False %}\nDock_Probe\n{% endif %}\n{% endif %}\n_CheckProbe action=query\n_Park_Toolhead\n_exit_point function=homing_override\n_KLICKY_STATUS_READY', 'axes': 'xyz'}, 'gcode_macro _klicky_status_leveling': {'gcode': '\n{% if printer[\'gcode_macro status_leveling\'] is defined %}\n_KlickyDebug msg="_klicky_status_leveling activating the LED STATUS_LEVELING"\nSTATUS_LEVELING\n{% endif %}'}, 'gcode_macro _Home_Z': {'gcode': '\n{% set z_endstop_x = printer["gcode_macro _Probe_Variables"].z_endstop_x %}\n{% set z_endstop_y = printer["gcode_macro _Probe_Variables"].z_endstop_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Home_Z\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n{% else %}\n_KlickyDebug msg="_Home_Z XY Axis homed"\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="_Home_Z Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n_KlickyDebug msg="_Home_Z moving to Z endstop position G0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}"\nG0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}\n_KlickyDebug msg="_Home_Z Homing Z G28 Z"\nG28 Z0\n_KlickyDebug msg="_Home_Z toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_exit_point function=Home_Z'}, 'fan': {'pin': 'P2.3'}, 'gcode_macro _klicky_status_meshing': {'gcode': '\n{% if printer[\'gcode_macro status_meshing\'] is defined %}\n_KlickyDebug msg="_klicky_status_meshing activating the LED STATUS_MESHING"\nSTATUS_MESHING\n{% endif %}'}, 'tmc2209 stepper_x': {'uart_pin': 'P1.10', 'stealthchop_threshold': '0', 'run_current': '1.4', 'interpolate': 'False'}, 'mcu': {'baud': '250000', 'restart_method': 'command', 'serial': '/dev/ttyAMA0'}, 'stepper_z1': {'rotation_distance': '2', 'step_pin': 'P2.13', 'microsteps': '16', 'dir_pin': '!P0.11', 'enable_pin': '!P2.12'}, 'gcode_macro _klicky_status_calibrating_z': {'gcode': '\n{% if printer[\'gcode_macro status_calibrating_z\'] is defined %}\n_KlickyDebug msg="_klicky_status_calibrating_z activating the LED STATUS_CALIBRATING_Z"\nSTATUS_CALIBRATING_Z\n{% endif %}'}, 'tmc2208 stepper_z': {'uart_pin': 'P1.8', 'hold_current': '0.200', 'stealthchop_threshold': '50', 'run_current': '0.70'}, 'tmc2208 extruder': {'driver_hstrt': '7', 'driver_toff': '4', 'sense_resistor': '0.11', 'driver_hend': '6', 'interpolate': 'false', 'stealthchop_threshold': '0', 'driver_tbl': '0', 'run_current': '0.7', 'uart_pin': 'P1.1', 'hold_current': '0.100'}, 'gcode_macro filament_wyladuj': {'gcode': "\nSAVE_GCODE_STATE NAME=unload_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Unloading filament...\nG0 E-5 F1000\nG4 P3000\nG0 E5 F1000\nG0 E-35 F5200\nG0 E-100 F800\nM117 Filament unloaded!\nRESTORE_GCODE_STATE NAME=unload_state"}, 'screws_tilt_adjust': {'horizontal_move_z': '10', 'screw6_name': 'rear right', 'screw4_name': 'rear left', 'screw6': '324, 320', 'screw1_name': 'front left', 'screw2_name': 'front middle', 'speed': '500', 'screw_thread': 'CW-M3', 'screw5_name': 'rear middle', 'screw2': '189, 32', 'screw3': '324, 32', 'screw1': '44, 32', 'screw3_name': 'front right', 'screw4': '44, 320', 'screw5': '189, 320'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'Perform Mesh Bed Leveling with klicky automount', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Bed Mesh Calibrate") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_MESHING\n_BED_MESH_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe'}, 'gcode_macro Dock_Probe_Unlock': {'gcode': '\n_Probe_Unlock\nDock_Probe', 'description': 'Docks Klicky Probe even if it was locked'}, 'gcode_macro PROBE_ACCURACY': {'rename_existing': '_PROBE_ACCURACY', 'description': 'Probe Z-height accuracy at current XY position with klicky automount', 'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_accuracy Axis homed"\n_KlickyDebug msg="probe_accuracy Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n_entry_point function=PROBE_ACCURACY\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_ACCURACY with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nAttach_Probe back=1\n_KlickyDebug msg="probe_accuracy calling klipper probe accuracy"\n_PROBE_ACCURACY {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe back=1\n_exit_point function=PROBE_ACCURACY move=1'}, 'display_status': {}, 'gcode_macro _klicky_check_variables_version': {'gcode': '\n{% set version = printer["gcode_macro _User_Variables"].version|default(0) %}\n{% if version != 1 %}\n{ action_raise_error("Please update your klicky variables, there are some functionality changes") }\n{% endif %}'}, 'gcode_macro LED_off': {'gcode': '\nSET_PIN PIN=LED VALUE=0'}, 'gcode_macro _klicky_status_homing': {'gcode': '\n{% if printer[\'gcode_macro status_homing\'] is defined %}\n_KlickyDebug msg="_klicky_status_homing activating the LED STATUS_HOMING"\nSTATUS_HOMING\n{% endif %}'}, 'gcode_macro PROBE_CALIBRATE': {'rename_existing': '_PROBE_CALIBRATE', 'description': 'Calibrate the probes z_offset with klicky automount', 'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_calibrate Axis homed"\n_KlickyDebug msg="probe_calibrate Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_CALIBRATE with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nG90\nAttach_Probe back=1\n_KLICKY_STATUS_CALIBRATING_Z\n_KlickyDebug msg="probe_calibrate calling klipper probe_calibrate"\n_PROBE_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nM118 moving the toolhead 20 mm from the bed\n_KlickyDebug msg="probe_calibrate Moving Z up by 20mm"\nTESTZ Z=20\nM118 remove manually the probe and continue calibration\n_KLICKY_STATUS_READY'}, 'gcode_macro _RetractKlickyDock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_retract = printer["gcode_macro _User_Variables"].servo_retract|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_RetractKlickyDock Klicky servo configuration enabled"\n{% if servo_retract == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo retract angle specified") }\n{% endif %}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _RetractDock"] is defined %}\n_KlickyDebug msg="_RetractKlickyDock calling _RetractDock"\n_RetractDock\n{% endif %}', 'description': 'Retracts Klicky servo-controlled dock'}, 'bed_mesh': {'horizontal_move_z': '7', 'algorithm': 'bicubic', 'mesh_pps': '2,3', 'mesh_min': '10,10', 'mesh_max': '305,290', 'fade_start': '1', 'bicubic_tension': '0.2', 'fade_end': '10', 'probe_count': '4,4', 'speed': '500'}, 'gcode_macro CANCEL_PRINT': {'rename_existing': 'BASE_CANCEL_PRINT', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT'}, 'gcode_macro _Probe_Variables': {'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'gcode': '', 'variable_probe_attached': 'False', 'variable_probe_lock': 'False', 'variable_probe_state': 'False'}, 'gcode_macro _DeployKlickyDock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_deploy = printer["gcode_macro _User_Variables"].servo_deploy|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_DeployKlickyDock Klicky servo configuration enabled"\n{% if servo_deploy == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo deploy angle specified") }\n{% endif %}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _DeployDock"] is defined %}\n_KlickyDebug msg="_DeployKlickyDock calling _DeployDock"\n_DeployDock\n{% endif %}', 'description': 'Deploys Klicky servo-controlled dock'}, 'gcode_macro _Umbilical_Path': {'gcode': '\n{% set umbilical = printer["gcode_macro _User_Variables"].umbilical %}\n{% set umbilical_x = printer["gcode_macro _User_Variables"].umbilical_x %}\n{% set umbilical_y = printer["gcode_macro _User_Variables"].umbilical_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% if umbilical %}\n_entry_point function=Umbilical_Path\n_KlickyDebug msg="_Umbilical_Path moving to G0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}"\nG0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}\n_exit_point function=Umbilical_Path\n{% endif %}'}, 'gcode_macro G29': {'gcode': '\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=default\nG1 X10 Y10 Z5 F4000'}, 'gcode_macro M125': {'gcode': '\nSAVE_GCODE_STATE NAME=parking\nM117 Parking toolhead\nG91\nG1 Z5 F300\nG90\nG1 X12 Y10 F4000\nRESTORE_GCODE_STATE name=parking'}, 'extruder': {'control': 'pid', 'max_extrude_cross_section': '0.85', 'pressure_advance_smooth_time': '0.03', 'max_extrude_only_distance': '1400', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'min_temp': '0', 'enable_pin': '!P1.16', 'pressure_advance': '0.025', 'max_extrude_only_velocity': '75', 'dir_pin': '!P1.14', 'pid_kp': '20.167', 'full_steps_per_rotation': '200', 'heater_pin': 'P2.7', 'pid_kd': '73.358', 'pid_ki': '1.386', 'filament_diameter': '1.750', 'gear_ratio': '50:10', 'sensor_pin': 'P0.24', 'nozzle_diameter': '0.400', 'rotation_distance': '22.67895', 'step_pin': 'P1.15', 'microsteps': '16', 'max_extrude_only_accel': '1500', 'max_temp': '280'}}, 'settings': {'respond': {'default_prefix': 'echo:', 'default_type': 'echo'}, 'force_move': {'enable_force_move': True}, 'gcode_macro _klicky_status_homing': {'gcode': '\n{% if printer[\'gcode_macro status_homing\'] is defined %}\n_KlickyDebug msg="_klicky_status_homing activating the LED STATUS_HOMING"\nSTATUS_HOMING\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _klicky_status_cleaning': {'gcode': '\n{% if printer[\'gcode_macro status_cleaning\'] is defined %}\n_KlickyDebug msg="_klicky_status_cleaning activating the LED STATUS_CLEANING"\nSTATUS_CLEANING\n{% endif %}', 'description': 'G-Code macro'}, 'output_pin led': {'shutdown_value': 0.0, 'scale': 100.0, 'cycle_time': 0.01, 'pin': 'P2.4', 'maximum_mcu_duration': 0.0, 'value': 0.0, 'hardware_pwm': False, 'pwm': True}, 'gcode_macro led_off': {'gcode': '\nSET_PIN PIN=LED VALUE=0', 'description': 'G-Code macro'}, 'gcode_macro filament_laduj': {'gcode': "\nSAVE_GCODE_STATE NAME=load_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Loading filament...\nG0 E70 F600\nG4 P1000\nG0 E70 F200\nM400e\nM117 Filament loaded!\nRESTORE_GCODE_STATE NAME=load_state", 'description': 'G-Code macro'}, 'probe': {'samples_tolerance_retries': 3, 'deactivate_on_each_sample': True, 'pin': 'P1.27', 'samples_result': 'median', 'samples_tolerance': 0.02, 'activate_gcode': '', 'deactivate_gcode': '', 'sample_retract_dist': 4.0, 'x_offset': -19.5, 'y_offset': -27.0, 'samples': 1, 'z_offset': 5.2, 'speed': 10.0, 'lift_speed': 8.0}, 'gcode_macro _klicky_status_busy': {'gcode': '\n{% if printer[\'gcode_macro status_busy\'] is defined %}\n_KlickyDebug msg="_klicky_status_busy activating the LED STATUS_BUSY"\nSTATUS_BUSY\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _retractklickydock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_retract = printer["gcode_macro _User_Variables"].servo_retract|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_RetractKlickyDock Klicky servo configuration enabled"\n{% if servo_retract == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo retract angle specified") }\n{% endif %}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _RetractDock"] is defined %}\n_KlickyDebug msg="_RetractKlickyDock calling _RetractDock"\n_RetractDock\n{% endif %}', 'description': 'Retracts Klicky servo-controlled dock'}, 'gcode_macro _checkprobe': {'variable_probe_state': '0', 'description': 'G-Code macro', 'gcode': '\nQuery_Probe\n_SetProbeState action={ params.ACTION }'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT', 'description': 'G-Code macro', 'rename_existing': 'BASE_CANCEL_PRINT'}, 'printer': {'square_corner_velocity': 5.0, 'move_flush_time': 0.05, 'max_accel': 8000.0, 'buffer_time_start': 0.25, 'buffer_time_low': 1.0, 'max_z_accel': 100.0, 'max_velocity': 700.0, 'max_z_velocity': 8.0, 'kinematics': 'corexy', 'max_accel_to_decel': 4000.0, 'buffer_time_high': 2.0}, 'gcode_macro probe_calibrate': {'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_calibrate Axis homed"\n_KlickyDebug msg="probe_calibrate Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_CALIBRATE with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nG90\nAttach_Probe back=1\n_KLICKY_STATUS_CALIBRATING_Z\n_KlickyDebug msg="probe_calibrate calling klipper probe_calibrate"\n_PROBE_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nM118 moving the toolhead 20 mm from the bed\n_KlickyDebug msg="probe_calibrate Moving Z up by 20mm"\nTESTZ Z=20\nM118 remove manually the probe and continue calibration\n_KLICKY_STATUS_READY', 'description': 'Calibrate the probes z_offset with klicky automount', 'rename_existing': '_PROBE_CALIBRATE'}, 'gcode_macro _user_variables': {'variable_dock_on_zhome': 'True', 'variable_park_toolhead': 'False', 'variable_servo_delay': '250', 'variable_z_drop_speed': '10', 'variable_release_speed': '75', 'variable_umbilical': 'False', 'variable_servo_retract': '11', 'variable_docklocation_y': '32.5', 'variable_docklocation_x': '-10', 'variable_move_accel': '1000', 'variable_docklocation_z': '-128', 'variable_enable_dock_servo': 'False', 'variable_attachmove2_x': '0', 'variable_attachmove2_y': '0', 'variable_attachmove2_z': '0', 'variable_servo_name': "'NAME'", 'variable_dock_speed': '50', 'variable_attachmove_z': '0', 'variable_attachmove_y': '0', 'variable_attachmove_x': '-20', 'variable_enable_z_hop': 'True', 'description': 'G-Code macro', 'variable_dockmove_z': '0', 'gcode': '\n{% set Mx = printer[\'configfile\'].config["stepper_x"]["position_max"]|float %}\n{% set My = printer[\'configfile\'].config["stepper_y"]["position_max"]|float %}\n{% set Ox = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set Oy = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% set Oz = printer[\'configfile\'].config["probe"]["z_offset"]|float %}\n{% if z_endstop_x != 0 or z_endstop_y != 0 %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }\n{% endif %}', 'variable_override_homing': "''", 'variable_servo_deploy': '10', 'variable_version': '1', 'variable_umbilical_x': '15', 'variable_umbilical_y': '15', 'variable_parkposition_x': '125', 'variable_parkposition_y': '125', 'variable_parkposition_z': '12', 'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'variable_dockmove_y': '40', 'variable_dockmove_x': '0', 'variable_safe_z': '12', 'variable_verbose': 'True', 'variable_max_bed_x': '330', 'variable_max_bed_y': '325', 'variable_travel_speed': '200', 'variable_home_backoff_y': '5', 'variable_home_backoff_x': '5', 'variable_debug': 'False'}, 'filament_switch_sensor runoutsensor': {'runout_gcode': 'M600', 'pause_delay': 0.5, 'switch_pin': 'P1.26', 'pause_on_runout': True, 'event_delay': 3.0}, 'gcode_macro m600': {'gcode': '\n{% set X = params.X|default(50)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set Z = params.Z|default(10)|float %}\nSAVE_GCODE_STATE NAME=M600_state\nPAUSE\nG91\nG1 Z{Z}\nG90\nG1 X{X} Y{Y} F3000\nG91\nRESTORE_GCODE_STATE NAME=M600_state', 'description': 'G-Code macro'}, 'z_tilt': {'retries': 6, 'horizontal_move_z': 10.0, 'z_positions': [[418.0, 189.0], [-88.0, 189.0]], 'retry_tolerance': 0.0075, 'points': [[324.0, 189.0], [44.0, 189.0]], 'speed': 500.0}, 'gcode_macro _park_toolhead': {'gcode': '\n{% set park_toolhead = printer["gcode_macro _User_Variables"].park_toolhead %}\n{% set parkposition_x = printer["gcode_macro _User_Variables"].parkposition_x %}\n{% set parkposition_y = printer["gcode_macro _User_Variables"].parkposition_y %}\n{% set parkposition_z = printer["gcode_macro _User_Variables"].parkposition_z %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Park_Toolhead\n{% if park_toolhead and \'xyz\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Parking Toolhead") }\n{% endif %}\n{% if parkposition_z == -128 %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}\n{% endif %}\n{% endif %}\n_exit_point function=Park_Toolhead', 'description': 'G-Code macro'}, 'heater_bed': {'control': 'pid', 'pid_kp': 53.533, 'pullup_resistor': 4700.0, 'sensor_pin': 'P0.25', 'heater_pin': 'P2.5', 'max_power': 1.0, 'min_extrude_temp': 170.0, 'sensor_type': 'Generic 3950', 'inline_resistor': 0.0, 'pid_kd': 662.471, 'pwm_cycle_time': 0.1, 'pid_ki': 1.081, 'min_temp': 0.0, 'max_temp': 130.0, 'smooth_time': 1.0}, 'gcode_macro m125': {'gcode': '\nSAVE_GCODE_STATE NAME=parking\nM117 Parking toolhead\nG91\nG1 Z5 F300\nG90\nG1 X12 Y10 F4000\nRESTORE_GCODE_STATE name=parking', 'description': 'G-Code macro'}, 'gcode_macro _setprobestate': {'gcode': '\n{% set query_probe_triggered = printer.probe.last_query %}\n{% set action  = params.ACTION|default(\'\') %}\n{% if query_probe_triggered %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ False }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ True }\n{% endif %}\n{% if action == \'query\' %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_state VALUE={ query_probe_triggered }\n{% endif %}\n{% if not query_probe_triggered and action == \'dock\' %}\n{ action_raise_error("Probe dock failed!") }\n{% endif %}\n{% if query_probe_triggered and action == \'attach\' %}\n{ action_raise_error("Probe attach failed!") }\n{% endif %}', 'description': 'G-Code macro'}, 'bed_mesh default': {'tension': 0.2, 'min_x': 10.0, 'min_y': 10.0, 'y_count': 4, 'mesh_y_pps': 3, 'x_count': 4, 'version': 1, 'algo': 'bicubic', 'mesh_x_pps': 2, 'max_y': 289.99, 'max_x': 310.0, 'points': [[-0.0525, 0.005625, -0.056875, 0.003125], [-0.195, -0.056875, -0.094375, -0.076875], [-0.144375, 0.00125, -0.084375, -0.134375], [-0.020625, -0.024375, -0.0175, -0.043125]]}, 'virtual_sdcard': {'path': '~/gcode_files', 'on_error_gcode': ''}, 'tmc2209 stepper_y': {'driver_pwm_ofs': 36, 'driver_pwm_autoscale': True, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_hend': 0, 'uart_address': 0, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': False, 'uart_pin': 'P1.9', 'driver_hstrt': 5, 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 1.4, 'driver_sgthrs': 0, 'stealthchop_threshold': 0.0, 'hold_current': 2.0, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro _probe_unlock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to False"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }', 'description': 'Unlocks Klicky Probe state'}, 'verify_heater extruder': {'max_error': 120.0, 'check_gain_time': 20.0, 'hysteresis': 5.0, 'heating_gain': 2.0}, 'stepper_z': {'homing_positive_dir': False, 'homing_retract_dist': 5.0, 'full_steps_per_rotation': 200, 'endstop_pin': 'probe:z_virtual_endstop', 'rotation_distance': 2.0, 'gear_ratio': [], 'second_homing_speed': 2.5, 'step_pin': 'P0.22', 'position_min': -2.0, 'microsteps': 16, 'homing_speed': 5.0, 'position_max': 350.0, 'dir_pin': '!P2.11', 'homing_retract_speed': 5.0, 'enable_pin': '!P0.21'}, 'stepper_y': {'homing_positive_dir': True, 'homing_retract_dist': 0.0, 'position_endstop': 325.0, 'full_steps_per_rotation': 200, 'endstop_pin': '!P1.28', 'rotation_distance': 40.0, 'gear_ratio': [], 'second_homing_speed': 10.0, 'step_pin': 'P0.19', 'homing_speed': 60.0, 'microsteps': 16, 'position_min': -1.0, 'dir_pin': 'P0.20', 'position_max': 325.0, 'homing_retract_speed': 60.0, 'enable_pin': '!P2.8'}, 'stepper_x': {'homing_positive_dir': True, 'homing_retract_dist': 0.0, 'position_endstop': 329.0, 'full_steps_per_rotation': 200, 'endstop_pin': '!P1.29', 'rotation_distance': 40.0, 'gear_ratio': [], 'second_homing_speed': 10.0, 'step_pin': 'P2.2', 'position_min': -10.0, 'microsteps': 16, 'homing_speed': 60.0, 'position_max': 329.0, 'dir_pin': 'P2.6', 'homing_retract_speed': 60.0, 'enable_pin': '!P2.1'}, 'input_shaper': {'damping_ratio_x': 0.1, 'damping_ratio_y': 0.1, 'shaper_type_x': 'zv', 'shaper_type_y': 'mzv', 'shaper_freq_x': 93.2, 'shaper_freq_y': 52.4, 'shaper_type': 'mzv'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}\nG90 ; use absolute coordinates\nM83 ; extruder relative mode\nM104 S150 ; set extruder temp 150c for auto bed leveling\nM140 S{BED_TEMP} ; set bed temp\nM190 S{BED_TEMP} ; wait for bed temp\nM104 S{EXTRUDER_TEMP} ; set extruder temp\nM109 S{EXTRUDER_TEMP} ; wait for extruder temp\nG28 ; home all\nG1 Z5 F240 ; lower bed before moving\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X60 Y5 Z0.2 F5000.0 ;Move to start position\nG1 X60 E9 F1000 ; intro line\nG1 X100 E12.5 F1000 ; intro line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up', 'description': 'G-Code macro'}, 'gcode_macro _deployklickydock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_deploy = printer["gcode_macro _User_Variables"].servo_deploy|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_DeployKlickyDock Klicky servo configuration enabled"\n{% if servo_deploy == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo deploy angle specified") }\n{% endif %}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _DeployDock"] is defined %}\n_KlickyDebug msg="_DeployKlickyDock calling _DeployDock"\n_DeployDock\n{% endif %}', 'description': 'Deploys Klicky servo-controlled dock'}, 'gcode_macro low_temp_check': {'gcode': '\n{% set T = params.T|default(210) %}\n{% if printer.extruder.target != 0 %}\n{% if printer.extruder.temperature < printer.extruder.target %}\nM117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.\nM109 S{printer.extruder.target|float}\n{% endif %}\n{% else %}\n{% if printer.extruder.target < T %}\nM117 No setpoint, heating to {T}.\nM109 S{T}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'screws_tilt_adjust': {'horizontal_move_z': 10.0, 'screw6_name': 'rear right', 'screw3_name': 'front right', 'screw1_name': 'front left', 'screw2_name': 'front middle', 'speed': 500.0, 'screw_thread': 'CW-M3', 'screw5_name': 'rear middle', 'screw4_name': 'rear left', 'screw2': [189.0, 32.0], 'screw3': [324.0, 32.0], 'screw1': [44.0, 32.0], 'screw6': [324.0, 320.0], 'screw4': [44.0, 320.0], 'screw5': [189.0, 320.0]}, 'gcode_macro _exit_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move  = params.MOVE|default(0) %}\n{% set speed = printer["gcode_macro _User_Variables"].travel_speed %}\nM400\nSET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}\nSET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\nRESTORE_GCODE_STATE NAME={function} MOVE={move} MOVE_SPEED={speed}', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': '\nSET_PIN PIN=LED VALUE=100', 'description': 'G-Code macro'}, 'homing_override': {'gcode': '\n_User_Variables\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set kinematic_z = 0 %}\n{% set dock_on_zhome = printer["gcode_macro _User_Variables"].dock_on_zhome|default(True) %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set home_backoff_x = printer["gcode_macro _User_Variables"].home_backoff_x|default(0) %}\n{% set home_backoff_y = printer["gcode_macro _User_Variables"].home_backoff_y|default(0) %}\n{% set override_homing = printer["gcode_macro _User_Variables"].override_homing|default(\'\') %}\n_klicky_check_variables_version\n_CheckProbe action=query\n{% set home_x, home_y, home_z, leave_probe_attached = False, False, False, False %}\n{% if \'PROBE_LOCK\' in params%}\n{% if verbose %}\n{ action_respond_info("PROBE_LOCK = True") }\n{% endif %}\n{% set leave_probe_attached = True %}\n{% endif %}\n{% if not \'X\' in params\nand not \'Y\' in params\nand not \'Z\' in params %}\n{% set home_x, home_y, home_z = True, True, True %}\n_KlickyDebug msg="homing_override goint to home all axes"\n{% else %}\n{% if \'X\' in params %}\n{% set home_x = True %}\n_KlickyDebug msg="homing_override goint to home X"\n{% endif %}\n{% if \'Y\' in params %}\n{% set home_y = True %}\n_KlickyDebug msg="homing_override goint to home Y"\n{% endif %}\n{% if \'Z\' in params %}\n{% set home_z = True %}\n_KlickyDebug msg="homing_override goint to home Z"\n{% endif %}\n{% if \'X\' in params\nand \'Y\' in params\nand \'Z\' in params %}\n_Homing_Variables reset=1\n_KlickyDebug msg="homing_override goint to home all axes"\n{% endif %}\n{% endif %}\n_entry_point function=homing_override\n_KLICKY_STATUS_HOMING\n{% if \'z\' not in printer.toolhead.homed_axes %}\n{% if not enable_z_hop %}\n_KlickyDebug msg="homing_override z_hop disabled"\n{% set kinematic_z = safe_z %}\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if \'z\' in printer.toolhead.homed_axes %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, with homed axes, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% else %}\n{% if verbose %}\n{ action_respond_info("Z not homed, forcing full G28") }\n{% endif %}\n_KlickyDebug msg="homing_override Z not homed, setting position as X=Y=0 Z={kinematic_z}"\nSET_KINEMATIC_POSITION X=0 Y=0 Z={kinematic_z}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% set home_x, home_y, home_z = True, True, True %}\n{% endif %}\n{% endif %}\n{% if ((attachmove_y == 0 and override_homing == \'\' ) or (override_homing == \'Y\'))%}\n{% if home_y %}\n{% if override_homing == \'Y\' %}\n_KlickyDebug msg="homing_override Y homing first override, due to override_homing = Y"\n{% else %}\n_KlickyDebug msg="homing_override Y homing first override, due to attachmove_y = 0"\n{% endif %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop-home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% set home_y = False %}\n{% endif %}\n{% if home_x %}\n{% if verbose %}\n{ action_respond_info("Homing X") }\n{% endif %}\n{% if printer["gcode_macro _HOME_X"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_X external script to handle the X homing"\n_HOME_X\n{% else %}\n_KlickyDebug msg="homing_override Homing X, G28 X0"\nG28 X0\n{% if home_backoff_x != 0 %}\n{% if (printer.configfile.settings.stepper_x.position_endstop > (printer.configfile.settings.stepper_x.position_min|default(0) + printer.configfile.settings.stepper_x.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_y %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y, G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if verbose %}\n{ action_respond_info("Homing Z") }\n{% endif %}\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe configured as a virtual Z endstop attaching probe"\nAttach_Probe\n{% if leave_probe_attached %}\n_Probe_Lock\n{% endif %}\n{% elif dock_on_zhome == True %}\nDock_Probe\n{% endif %}\n_Home_Z\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe no longer required, docking probe"\nDock_Probe\n{% elif dock_on_zhome == False %}\nDock_Probe\n{% endif %}\n{% endif %}\n_CheckProbe action=query\n_Park_Toolhead\n_exit_point function=homing_override\n_KLICKY_STATUS_READY', 'axes': 'xyz'}, 'gcode_macro _entry_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move_accel = printer["gcode_macro _User_Variables"].move_accel|default(1000) %}\nM400\nSAVE_GCODE_STATE NAME={function}\nSET_GCODE_OFFSET Z=0\nG90\nSET_VELOCITY_LIMIT ACCEL={move_accel}', 'description': 'G-Code macro'}, 'mcu': {'baud': 250000, 'restart_method': 'command', 'serial': '/dev/ttyAMA0', 'max_stepper_error': 2.5e-05}, 'gcode_macro attach_probe_lock': {'gcode': '\nAttach_Probe\n_Probe_Lock', 'description': 'Attaches Klicky Probe, can only be docked after unlocking'}, 'gcode_macro dock_probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe Axis homed"\n_entry_point function=Dock_Probe\n{% if probe_attached and not probe_lock %}\n_KlickyDebug msg="Dock_Probe going to dock probe"\n{% if verbose %}\n{ action_respond_info("Docking Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Dock_Probe toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n_KlickyDebug msg="Dock_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}"\nG0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}\n{% endif %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n_KlickyDebug msg="Dock_Probe moving away from the dock to G0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Dock_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\nG4 P1000\n_CheckProbe action=dock\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe locked not docking probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already docked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe already docked, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Dock_Probe move={goback}', 'description': 'Docks Klicky Probe'}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Bed Mesh Calibrate") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_MESHING\n_BED_MESH_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe', 'description': 'Perform Mesh Bed Leveling with klicky automount', 'rename_existing': '_BED_MESH_CALIBRATE'}, 'tmc2208 extruder': {'driver_pwm_ofs': 36, 'driver_hstrt': 7, 'driver_toff': 4, 'sense_resistor': 0.11, 'driver_hend': 6, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': False, 'stealthchop_threshold': 0.0, 'hold_current': 0.1, 'driver_tbl': 0, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 0.7, 'uart_address': 0, 'uart_pin': 'P1.1', 'driver_pwm_autoscale': True, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro dock_probe_unlock': {'gcode': '\n_Probe_Unlock\nDock_Probe', 'description': 'Docks Klicky Probe even if it was locked'}, 'tmc2208 stepper_z1': {'driver_pwm_ofs': 36, 'driver_hstrt': 5, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_pwm_autoscale': True, 'driver_hend': 0, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': True, 'stealthchop_threshold': 50.0, 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 0.7, 'uart_address': 0, 'uart_pin': 'P1.4', 'hold_current': 0.2, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro _probe_lock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to True"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ True }', 'description': 'Locks Klicky Probe state'}, 'gcode_macro g29': {'gcode': '\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=default\nG1 X10 Y10 Z5 F4000', 'description': 'G-Code macro'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE'}, 'temperature_sensor zasilacz': {'pullup_resistor': 4700.0, 'sensor_pin': 'P0.23', 'sensor_type': 'Generic 3950', 'inline_resistor': 0.0, 'min_temp': 0.0, 'max_temp': 120.0}, 'gcode_macro _klickydebug': {'gcode': '\n{% set message  = params.MSG %}\n{% set debug = printer["gcode_macro _User_Variables"].debug|default(False) %}\n{% if debug %}\n{ action_respond_info(message) }\n{% endif %}', 'description': 'G-Code macro'}, 'idle_timeout': {'gcode': '\nTURN_OFF_HEATERS\nM84; disable steppers', 'timeout': 600.0}, 'gcode_macro prime_line': {'gcode': '\nM117 Prime Line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X20 Y30 Z0.28 F5000.0 ;Move to start position\nG1 X20 Y190.0 Z0.28 F1500.0 E15 ;Draw the first line\nG1 X22 Y190.0 Z0.28 F5000.0 ;Move to side a little\nG1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line\nG92 E0 ;Reset Extruder\nG1 E-2 F500\nG92 E0.0\nG1 Z2.0 F1000 ;Move Z Axis up\nlift_z', 'description': 'G-Code macro'}, 'fan': {'cycle_time': 0.01, 'pin': 'P2.3', 'off_below': 0.0, 'shutdown_speed': 0.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'hardware_pwm': False}, 'gcode_macro _klicky_status_meshing': {'gcode': '\n{% if printer[\'gcode_macro status_meshing\'] is defined %}\n_KlickyDebug msg="_klicky_status_meshing activating the LED STATUS_MESHING"\nSTATUS_MESHING\n{% endif %}', 'description': 'G-Code macro'}, 'tmc2209 stepper_x': {'driver_pwm_lim': 12, 'driver_pwm_ofs': 36, 'driver_iholddelay': 8, 'driver_hstrt': 5, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_hend': 0, 'driver_pwm_reg': 8, 'driver_sgthrs': 0, 'interpolate': False, 'uart_pin': 'P1.10', 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 1.4, 'uart_address': 0, 'stealthchop_threshold': 0.0, 'hold_current': 2.0, 'driver_tpowerdown': 20, 'driver_pwm_autoscale': True, 'driver_pwm_freq': 1}, 'stepper_z1': {'full_steps_per_rotation': 200, 'rotation_distance': 2.0, 'gear_ratio': [], 'step_pin': 'P2.13', 'microsteps': 16, 'dir_pin': '!P0.11', 'enable_pin': '!P2.12'}, 'gcode_macro _klicky_status_calibrating_z': {'gcode': '\n{% if printer[\'gcode_macro status_calibrating_z\'] is defined %}\n_KlickyDebug msg="_klicky_status_calibrating_z activating the LED STATUS_CALIBRATING_Z"\nSTATUS_CALIBRATING_Z\n{% endif %}', 'description': 'G-Code macro'}, 'tmc2208 stepper_z': {'driver_pwm_ofs': 36, 'driver_hstrt': 5, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_hend': 0, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': True, 'uart_pin': 'P1.8', 'hold_current': 0.2, 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 0.7, 'uart_address': 0, 'stealthchop_threshold': 50.0, 'driver_pwm_autoscale': True, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro z_tilt_adjust': {'rename_existing': '_Z_TILT_ADJUST', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Z Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe\nG28 Z0'}, 'gcode_macro filament_wyladuj': {'gcode': "\nSAVE_GCODE_STATE NAME=unload_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Unloading filament...\nG0 E-5 F1000\nG4 P3000\nG0 E5 F1000\nG0 E-35 F5200\nG0 E-100 F800\nM117 Filament unloaded!\nRESTORE_GCODE_STATE NAME=unload_state", 'description': 'G-Code macro'}, 'gcode_macro screws_tilt_calculate': {'rename_existing': '_SCREWS_TILT_CALCULATE', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Screws Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_SCREWS_TILT_CALCULATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe'}, 'bed_mesh': {'horizontal_move_z': 7.0, 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'mesh_max': [305.0, 290.0], 'fade_start': 1.0, 'bicubic_tension': 0.2, 'fade_end': 10.0, 'mesh_min': [10.0, 10.0], 'split_delta_z': 0.025, 'probe_count': [4, 4], 'speed': 500.0, 'move_check_distance': 5.0}, 'gcode_macro _klicky_status_ready': {'gcode': '\n{% if printer[\'gcode_macro status_ready\'] is defined %}\n_KlickyDebug msg="_klicky_status_ready activating the LED STATUS_READY"\nSTATUS_READY\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _klicky_check_variables_version': {'gcode': '\n{% set version = printer["gcode_macro _User_Variables"].version|default(0) %}\n{% if version != 1 %}\n{ action_raise_error("Please update your klicky variables, there are some functionality changes") }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _klicky_status_leveling': {'gcode': '\n{% if printer[\'gcode_macro status_leveling\'] is defined %}\n_KlickyDebug msg="_klicky_status_leveling activating the LED STATUS_LEVELING"\nSTATUS_LEVELING\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}\n{% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Pause the actual running print', 'variable_extrude': '1.0', 'rename_existing': 'PAUSE_BASE'}, 'gcode_macro attach_probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set attachmove2_x = printer["gcode_macro _User_Variables"].attachmove2_x|default(0) %}\n{% set attachmove2_y = printer["gcode_macro _User_Variables"].attachmove2_y|default(0) %}\n{% set attachmove2_z = printer["gcode_macro _User_Variables"].attachmove2_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n_entry_point function=Attach_Probe\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n_KlickyDebug msg="Attach_Probe Axis homed"\n{% elif not probe_attached and not probe_lock %}\n_KlickyDebug msg="Attach_Probe going to attach probe"\n{% if verbose %}\n{ action_respond_info("Attaching Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% if not enable_z_hop %}\n_KlickyDebug msg="Attach_Probe z_hop disabled"\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero, duplicate?") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm, duplicate?"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_entry_point function=Attach_Probe_intern\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}"\nG0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Attach_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\n_CheckProbe action=attach\n_exit_point function=Attach_Probe_intern move={goback}\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe locked not attaching probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already attached!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe already attached, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Attach_Probe', 'description': 'Attaches Klicky Probe'}, 'gcode_macro probe_accuracy': {'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_accuracy Axis homed"\n_KlickyDebug msg="probe_accuracy Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n_entry_point function=PROBE_ACCURACY\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_ACCURACY with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nAttach_Probe back=1\n_KlickyDebug msg="probe_accuracy calling klipper probe accuracy"\n_PROBE_ACCURACY {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe back=1\n_exit_point function=PROBE_ACCURACY move=1', 'description': 'Probe Z-height accuracy at current XY position with klicky automount', 'rename_existing': '_PROBE_ACCURACY'}, 'gcode_macro _probe_variables': {'description': 'G-Code macro', 'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'gcode': '', 'variable_probe_attached': 'False', 'variable_probe_lock': 'False', 'variable_probe_state': 'False'}, 'gcode_macro _home_z': {'gcode': '\n{% set z_endstop_x = printer["gcode_macro _Probe_Variables"].z_endstop_x %}\n{% set z_endstop_y = printer["gcode_macro _Probe_Variables"].z_endstop_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Home_Z\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n{% else %}\n_KlickyDebug msg="_Home_Z XY Axis homed"\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="_Home_Z Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n_KlickyDebug msg="_Home_Z moving to Z endstop position G0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}"\nG0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}\n_KlickyDebug msg="_Home_Z Homing Z G28 Z"\nG28 Z0\n_KlickyDebug msg="_Home_Z toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_exit_point function=Home_Z', 'description': 'G-Code macro'}, 'gcode_macro lift_z': {'gcode': '\nG91\nG0 Z10 F2000\nG90', 'description': 'G-Code macro'}, 'gcode_macro _homing_variables': {'gcode': '\n{% set reset  = params.RESET|default(0) %}\n{% if reset %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }\n{% endif %}', 'description': 'G-Code macro'}, 'verify_heater heater_bed': {'max_error': 120.0, 'check_gain_time': 60.0, 'heating_gain': 2.0, 'hysteresis': 5.0}, 'extruder': {'control': 'pid', 'pullup_resistor': 4700.0, 'max_extrude_only_velocity': 75.0, 'gear_ratio': [[50.0, 10.0]], 'max_extrude_only_distance': 1400.0, 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'min_temp': 0.0, 'enable_pin': '!P1.16', 'pressure_advance': 0.025, 'max_extrude_cross_section': 0.85, 'pwm_cycle_time': 0.1, 'dir_pin': '!P1.14', 'pid_kp': 20.167, 'instantaneous_corner_velocity': 1.0, 'full_steps_per_rotation': 200, 'heater_pin': 'P2.7', 'pressure_advance_smooth_time': 0.03, 'smooth_time': 1.0, 'pid_ki': 1.386, 'filament_diameter': 1.75, 'sensor_pin': 'P0.24', 'nozzle_diameter': 0.4, 'pid_kd': 73.358, 'rotation_distance': 22.67895, 'step_pin': 'P1.15', 'inline_resistor': 0.0, 'max_power': 1.0, 'microsteps': 16, 'min_extrude_temp': 170.0, 'max_extrude_only_accel': 1500.0, 'max_temp': 280.0}, 'gcode_macro print_end': {'gcode': '\nM400                           ; wait for moves to finish\nG91 ;Relative positioning\nG1 E-2 F2700 ;Retract a bit\nG1 E-2 Z0.2 F2400 ;Retract and raise Z\nG1 X5 Y5 F3000 ;Wipe out\nG1 Z10 ;Raise Z more\nG90 ;Absolute positioning\nG28 X Y ;Present print\nM106 S0 ;Turn-off fan\nM104 S0 ;Turn-off hotend\nM140 S0 ;Turn-off bed\nM84 X Y E ;Disable all steppers but Z', 'description': 'G-Code macro'}, 'gcode_macro _umbilical_path': {'gcode': '\n{% set umbilical = printer["gcode_macro _User_Variables"].umbilical %}\n{% set umbilical_x = printer["gcode_macro _User_Variables"].umbilical_x %}\n{% set umbilical_y = printer["gcode_macro _User_Variables"].umbilical_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% if umbilical %}\n_entry_point function=Umbilical_Path\n_KlickyDebug msg="_Umbilical_Path moving to G0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}"\nG0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}\n_exit_point function=Umbilical_Path\n{% endif %}', 'description': 'G-Code macro'}}, 'save_config_pending': False}}
2022-11-16 23:22:03,518 [printer.py:reinit()] - Klipper version: v0.10.0-631-g8a065287
2022-11-16 23:22:03,519 [printer.py:reinit()] - # Extruders: 1
2022-11-16 23:22:03,519 [printer.py:reinit()] - # Temperature devices: 2
2022-11-16 23:22:03,519 [printer.py:reinit()] - # Fans: 1
2022-11-16 23:22:03,519 [printer.py:reinit()] - # Output pins: 1
2022-11-16 23:22:03,519 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe: {'objects': {'bed_mesh': ['profile_name', 'mesh_max', 'mesh_min', 'probed_matrix', 'profiles'], 'configfile': ['config'], 'display_status': ['progress', 'message'], 'fan': ['speed'], 'gcode_move': ['extrude_factor', 'gcode_position', 'homing_origin', 'speed_factor', 'speed'], 'idle_timeout': ['state'], 'pause_resume': ['is_paused'], 'print_stats': ['print_duration', 'total_duration', 'filament_used', 'filename', 'state', 'message', 'info'], 'toolhead': ['homed_axes', 'estimated_print_time', 'print_time', 'position', 'extruder', 'max_accel', 'max_accel_to_decel', 'max_velocity', 'square_corner_velocity'], 'virtual_sdcard': ['file_position', 'is_active', 'progress'], 'webhooks': ['state', 'state_message'], 'firmware_retraction': ['retract_length', 'retract_speed', 'unretract_extra_length', 'unretract_speed'], 'motion_report': ['live_position', 'live_velocity', 'live_extruder_velocity'], 'exclude_object': ['current_object', 'objects', 'excluded_objects'], 'extruder': ['target', 'temperature', 'pressure_advance', 'smooth_time', 'power'], 'heater_bed': ['target', 'temperature', 'power'], 'temperature_sensor zasilacz': ['target', 'temperature', 'power'], 'filament_switch_sensor RunoutSensor': ['enabled', 'filament_detected'], 'output_pin LED': ['value']}}
2022-11-16 23:22:03,521 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&extruder&heater_bed&temperature_sensor zasilacz&fan&filament_switch_sensor RunoutSensor&output_pin LED
2022-11-16 23:22:03,837 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2022-11-16 23:22:03,855 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'temperature_sensor zasilacz', 'extruder']
2022-11-16 23:22:03,856 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2022-11-16 23:22:03,856 [printer.py:change_state()] - Adding callback for state: ready
2022-11-16 23:22:03,858 [files.py:initialize()] - Gcodes path: /home/pi/gcode_files
2022-11-16 23:22:03,858 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2022-11-16 23:22:03,859 [screen.py:init_printer()] - Printer initialized
2022-11-16 23:22:03,862 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/server/info
2022-11-16 23:22:03,918 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2022-11-16 23:22:03,928 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/info
2022-11-16 23:22:03,938 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object
2022-11-16 23:22:04,014 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2022-11-16 23:22:04,267 [printer.py:reinit()] - Moonraker object status: {'configfile': {'save_config_pending_items': {}, 'warnings': [], 'config': {'respond': {}, 'force_move': {'enable_force_move': 'True'}, 'gcode_macro _klicky_status_cleaning': {'gcode': '\n{% if printer[\'gcode_macro status_cleaning\'] is defined %}\n_KlickyDebug msg="_klicky_status_cleaning activating the LED STATUS_CLEANING"\nSTATUS_CLEANING\n{% endif %}'}, 'gcode_macro _Probe_Unlock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to False"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }', 'description': 'Unlocks Klicky Probe state'}, 'pause_resume': {}, 'z_tilt': {'retries': '6', 'horizontal_move_z': '10', 'z_positions': '418,189\n-88,189', 'retry_tolerance': '0.0075', 'points': '324,189\n44,189', 'speed': '500'}, 'probe': {'samples_tolerance_retries': '3', 'x_offset': '-19.5', 'pin': 'P1.27', 'samples_result': 'median', 'sample_retract_dist': '4.0', 'samples_tolerance': '.02', 'lift_speed': '8', 'y_offset': '-27', 'samples': '1', 'z_offset': '5.2', 'speed': '10'}, 'output_pin LED': {'shutdown_value': '0', 'scale': '100', 'cycle_time': '0.01', 'pin': 'P2.4', 'value': '0', 'pwm': 'true'}, 'gcode_macro M600': {'gcode': '\n{% set X = params.X|default(50)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set Z = params.Z|default(10)|float %}\nSAVE_GCODE_STATE NAME=M600_state\nPAUSE\nG91\nG1 Z{Z}\nG90\nG1 X{X} Y{Y} F3000\nG91\nRESTORE_GCODE_STATE NAME=M600_state'}, 'gcode_macro _klicky_status_busy': {'gcode': '\n{% if printer[\'gcode_macro status_busy\'] is defined %}\n_KlickyDebug msg="_klicky_status_busy activating the LED STATUS_BUSY"\nSTATUS_BUSY\n{% endif %}'}, 'gcode_macro lift_z': {'gcode': '\nG91\nG0 Z10 F2000\nG90'}, 'gcode_macro PRIME_LINE': {'gcode': '\nM117 Prime Line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X20 Y30 Z0.28 F5000.0 ;Move to start position\nG1 X20 Y190.0 Z0.28 F1500.0 E15 ;Draw the first line\nG1 X22 Y190.0 Z0.28 F5000.0 ;Move to side a little\nG1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line\nG92 E0 ;Reset Extruder\nG1 E-2 F500\nG92 E0.0\nG1 Z2.0 F1000 ;Move Z Axis up\nlift_z'}, 'gcode_macro _User_Variables': {'variable_dock_on_zhome': 'True', 'variable_park_toolhead': 'False', 'variable_servo_delay': '250', 'variable_z_drop_speed': '10', 'variable_enable_z_hop': 'True', 'variable_umbilical': 'False', 'variable_servo_retract': '11', 'variable_docklocation_y': '32.5', 'variable_docklocation_x': '-10', 'variable_move_accel': '1000', 'variable_docklocation_z': '-128', 'variable_safe_z': '12', 'variable_attachmove2_x': '0', 'variable_dock_speed': '50', 'variable_attachmove2_z': '0', 'variable_servo_name': "'NAME'", 'variable_attachmove_z': '0', 'variable_attachmove_y': '0', 'variable_attachmove_x': '-20', 'variable_release_speed': '75', 'variable_dockmove_z': '0', 'gcode': '\n{% set Mx = printer[\'configfile\'].config["stepper_x"]["position_max"]|float %}\n{% set My = printer[\'configfile\'].config["stepper_y"]["position_max"]|float %}\n{% set Ox = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set Oy = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% set Oz = printer[\'configfile\'].config["probe"]["z_offset"]|float %}\n{% if z_endstop_x != 0 or z_endstop_y != 0 %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }\n{% endif %}', 'variable_override_homing': "''", 'variable_servo_deploy': '10', 'variable_version': '1', 'variable_umbilical_x': '15', 'variable_umbilical_y': '15', 'variable_parkposition_x': '125', 'variable_parkposition_y': '125', 'variable_parkposition_z': '12', 'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'variable_dockmove_y': '40', 'variable_dockmove_x': '0', 'variable_attachmove2_y': '0', 'variable_enable_dock_servo': 'False', 'variable_verbose': 'True', 'variable_max_bed_x': '330', 'variable_max_bed_y': '325', 'variable_travel_speed': '200', 'variable_home_backoff_y': '5', 'variable_home_backoff_x': '5', 'variable_debug': 'False'}, 'filament_switch_sensor RunoutSensor': {'runout_gcode': 'M600', 'switch_pin': 'P1.26', 'pause_on_runout': 'true'}, 'gcode_macro LOW_TEMP_CHECK': {'gcode': '\n{% set T = params.T|default(210) %}\n{% if printer.extruder.target != 0 %}\n{% if printer.extruder.temperature < printer.extruder.target %}\nM117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.\nM109 S{printer.extruder.target|float}\n{% endif %}\n{% else %}\n{% if printer.extruder.target < T %}\nM117 No setpoint, heating to {T}.\nM109 S{T}\n{% endif %}\n{% endif %}'}, 'gcode_macro LED_on': {'gcode': '\nSET_PIN PIN=LED VALUE=100'}, 'heater_bed': {'control': 'pid', 'pid_kp': '53.533', 'sensor_pin': 'P0.25', 'heater_pin': 'P2.5', 'sensor_type': 'Generic 3950', 'pid_kd': '662.471', 'pid_ki': '1.081', 'min_temp': '0', 'max_temp': '130'}, 'gcode_macro Attach_Probe_Lock': {'gcode': '\nAttach_Probe\n_Probe_Lock', 'description': 'Attaches Klicky Probe, can only be docked after unlocking'}, 'bed_mesh default': {'tension': '0.2', 'min_x': '10.0', 'min_y': '10.0', 'y_count': '4', 'mesh_y_pps': '3', 'x_count': '4', 'version': '1', 'algo': 'bicubic', 'mesh_x_pps': '2', 'max_y': '289.99', 'max_x': '310.0', 'points': '\n-0.052500, 0.005625, -0.056875, 0.003125\n-0.195000, -0.056875, -0.094375, -0.076875\n-0.144375, 0.001250, -0.084375, -0.134375\n-0.020625, -0.024375, -0.017500, -0.043125'}, 'virtual_sdcard': {'path': '~/gcode_files'}, 'gcode_macro _Park_Toolhead': {'gcode': '\n{% set park_toolhead = printer["gcode_macro _User_Variables"].park_toolhead %}\n{% set parkposition_x = printer["gcode_macro _User_Variables"].parkposition_x %}\n{% set parkposition_y = printer["gcode_macro _User_Variables"].parkposition_y %}\n{% set parkposition_z = printer["gcode_macro _User_Variables"].parkposition_z %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Park_Toolhead\n{% if park_toolhead and \'xyz\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Parking Toolhead") }\n{% endif %}\n{% if parkposition_z == -128 %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}\n{% endif %}\n{% endif %}\n_exit_point function=Park_Toolhead'}, 'gcode_macro _SetProbeState': {'gcode': '\n{% set query_probe_triggered = printer.probe.last_query %}\n{% set action  = params.ACTION|default(\'\') %}\n{% if query_probe_triggered %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ False }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ True }\n{% endif %}\n{% if action == \'query\' %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_state VALUE={ query_probe_triggered }\n{% endif %}\n{% if not query_probe_triggered and action == \'dock\' %}\n{ action_raise_error("Probe dock failed!") }\n{% endif %}\n{% if query_probe_triggered and action == \'attach\' %}\n{ action_raise_error("Probe attach failed!") }\n{% endif %}'}, 'gcode_macro PRINT_END': {'gcode': '\nM400                           ; wait for moves to finish\nG91 ;Relative positioning\nG1 E-2 F2700 ;Retract a bit\nG1 E-2 Z0.2 F2400 ;Retract and raise Z\nG1 X5 Y5 F3000 ;Wipe out\nG1 Z10 ;Raise Z more\nG90 ;Absolute positioning\nG28 X Y ;Present print\nM106 S0 ;Turn-off fan\nM104 S0 ;Turn-off hotend\nM140 S0 ;Turn-off bed\nM84 X Y E ;Disable all steppers but Z'}, 'stepper_z': {'endstop_pin': 'probe:z_virtual_endstop', 'rotation_distance': '2', 'step_pin': 'P0.22', 'position_min': '-2', 'microsteps': '16', 'dir_pin': '!P2.11', 'position_max': '350', 'enable_pin': '!P0.21'}, 'stepper_y': {'homing_retract_dist': '0', 'position_endstop': '325', 'full_steps_per_rotation': '200', 'endstop_pin': '!P1.28', 'rotation_distance': '40', 'second_homing_speed': '10', 'step_pin': 'P0.19', 'position_min': '-1', 'microsteps': '16', 'homing_speed': '60', 'dir_pin': 'P0.20', 'position_max': '325', 'enable_pin': '!P2.8'}, 'stepper_x': {'homing_retract_dist': '0', 'position_endstop': '329', 'full_steps_per_rotation': '200', 'endstop_pin': '!P1.29', 'rotation_distance': '40', 'second_homing_speed': '10', 'step_pin': 'P2.2', 'position_min': '-10', 'microsteps': '16', 'homing_speed': '60', 'dir_pin': 'P2.6', 'position_max': '329', 'enable_pin': '!P2.1'}, 'input_shaper': {'shaper_freq_x': '93.2', 'shaper_freq_y': '52.4', 'shaper_type_x': 'zv', 'shaper_type_y': 'mzv'}, 'gcode_macro PRINT_START': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}\nG90 ; use absolute coordinates\nM83 ; extruder relative mode\nM104 S150 ; set extruder temp 150c for auto bed leveling\nM140 S{BED_TEMP} ; set bed temp\nM190 S{BED_TEMP} ; wait for bed temp\nM104 S{EXTRUDER_TEMP} ; set extruder temp\nM109 S{EXTRUDER_TEMP} ; wait for extruder temp\nG28 ; home all\nG1 Z5 F240 ; lower bed before moving\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X60 Y5 Z0.2 F5000.0 ;Move to start position\nG1 X60 E9 F1000 ; intro line\nG1 X100 E12.5 F1000 ; intro line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up'}, 'gcode_macro Attach_Probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set attachmove2_x = printer["gcode_macro _User_Variables"].attachmove2_x|default(0) %}\n{% set attachmove2_y = printer["gcode_macro _User_Variables"].attachmove2_y|default(0) %}\n{% set attachmove2_z = printer["gcode_macro _User_Variables"].attachmove2_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n_entry_point function=Attach_Probe\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n_KlickyDebug msg="Attach_Probe Axis homed"\n{% elif not probe_attached and not probe_lock %}\n_KlickyDebug msg="Attach_Probe going to attach probe"\n{% if verbose %}\n{ action_respond_info("Attaching Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% if not enable_z_hop %}\n_KlickyDebug msg="Attach_Probe z_hop disabled"\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero, duplicate?") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm, duplicate?"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_entry_point function=Attach_Probe_intern\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}"\nG0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Attach_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\n_CheckProbe action=attach\n_exit_point function=Attach_Probe_intern move={goback}\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe locked not attaching probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already attached!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe already attached, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Attach_Probe', 'description': 'Attaches Klicky Probe'}, 'gcode_macro filament_laduj': {'gcode': "\nSAVE_GCODE_STATE NAME=load_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Loading filament...\nG0 E70 F600\nG4 P1000\nG0 E70 F200\nM400e\nM117 Filament loaded!\nRESTORE_GCODE_STATE NAME=load_state"}, 'gcode_macro _Homing_Variables': {'gcode': '\n{% set reset  = params.RESET|default(0) %}\n{% if reset %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }\n{% endif %}'}, 'gcode_macro _exit_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move  = params.MOVE|default(0) %}\n{% set speed = printer["gcode_macro _User_Variables"].travel_speed %}\nM400\nSET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}\nSET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\nRESTORE_GCODE_STATE NAME={function} MOVE={move} MOVE_SPEED={speed}'}, 'gcode_macro _KlickyDebug': {'gcode': '\n{% set message  = params.MSG %}\n{% set debug = printer["gcode_macro _User_Variables"].debug|default(False) %}\n{% if debug %}\n{ action_respond_info(message) }\n{% endif %}'}, 'gcode_macro _entry_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move_accel = printer["gcode_macro _User_Variables"].move_accel|default(1000) %}\nM400\nSAVE_GCODE_STATE NAME={function}\nSET_GCODE_OFFSET Z=0\nG90\nSET_VELOCITY_LIMIT ACCEL={move_accel}'}, 'tmc2208 stepper_z1': {'uart_pin': 'P1.4', 'hold_current': '0.200', 'stealthchop_threshold': '50', 'run_current': '0.70'}, 'gcode_macro _klicky_status_ready': {'gcode': '\n{% if printer[\'gcode_macro status_ready\'] is defined %}\n_KlickyDebug msg="_klicky_status_ready activating the LED STATUS_READY"\nSTATUS_READY\n{% endif %}'}, 'gcode_macro Z_TILT_ADJUST': {'rename_existing': '_Z_TILT_ADJUST', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Z Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe\nG28 Z0'}, 'gcode_macro Dock_Probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe Axis homed"\n_entry_point function=Dock_Probe\n{% if probe_attached and not probe_lock %}\n_KlickyDebug msg="Dock_Probe going to dock probe"\n{% if verbose %}\n{ action_respond_info("Docking Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Dock_Probe toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n_KlickyDebug msg="Dock_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}"\nG0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}\n{% endif %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n_KlickyDebug msg="Dock_Probe moving away from the dock to G0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Dock_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\nG4 P1000\n_CheckProbe action=dock\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe locked not docking probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already docked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe already docked, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Dock_Probe move={goback}', 'description': 'Docks Klicky Probe'}, 'printer': {'max_velocity': '700', 'max_z_velocity': '8', 'kinematics': 'corexy', 'max_accel': '8000', 'max_z_accel': '100'}, 'gcode_macro SCREWS_TILT_CALCULATE': {'rename_existing': '_SCREWS_TILT_CALCULATE', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Screws Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_SCREWS_TILT_CALCULATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe'}, 'gcode_macro _CheckProbe': {'variable_probe_state': '0', 'gcode': '\nQuery_Probe\n_SetProbeState action={ params.ACTION }'}, 'gcode_macro _Probe_Lock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to True"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ True }', 'description': 'Locks Klicky Probe state'}, 'tmc2209 stepper_y': {'uart_pin': 'P1.9', 'stealthchop_threshold': '0', 'run_current': '1.4', 'interpolate': 'False'}, 'gcode_macro RESUME': {'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro PAUSE': {'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}\n{% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'temperature_sensor zasilacz': {'min_temp': '0', 'sensor_type': 'Generic 3950', 'sensor_pin': 'P0.23', 'max_temp': '120'}, 'idle_timeout': {'gcode': '\nTURN_OFF_HEATERS\nM84; disable steppers'}, 'homing_override': {'gcode': '\n_User_Variables\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set kinematic_z = 0 %}\n{% set dock_on_zhome = printer["gcode_macro _User_Variables"].dock_on_zhome|default(True) %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set home_backoff_x = printer["gcode_macro _User_Variables"].home_backoff_x|default(0) %}\n{% set home_backoff_y = printer["gcode_macro _User_Variables"].home_backoff_y|default(0) %}\n{% set override_homing = printer["gcode_macro _User_Variables"].override_homing|default(\'\') %}\n_klicky_check_variables_version\n_CheckProbe action=query\n{% set home_x, home_y, home_z, leave_probe_attached = False, False, False, False %}\n{% if \'PROBE_LOCK\' in params%}\n{% if verbose %}\n{ action_respond_info("PROBE_LOCK = True") }\n{% endif %}\n{% set leave_probe_attached = True %}\n{% endif %}\n{% if not \'X\' in params\nand not \'Y\' in params\nand not \'Z\' in params %}\n{% set home_x, home_y, home_z = True, True, True %}\n_KlickyDebug msg="homing_override goint to home all axes"\n{% else %}\n{% if \'X\' in params %}\n{% set home_x = True %}\n_KlickyDebug msg="homing_override goint to home X"\n{% endif %}\n{% if \'Y\' in params %}\n{% set home_y = True %}\n_KlickyDebug msg="homing_override goint to home Y"\n{% endif %}\n{% if \'Z\' in params %}\n{% set home_z = True %}\n_KlickyDebug msg="homing_override goint to home Z"\n{% endif %}\n{% if \'X\' in params\nand \'Y\' in params\nand \'Z\' in params %}\n_Homing_Variables reset=1\n_KlickyDebug msg="homing_override goint to home all axes"\n{% endif %}\n{% endif %}\n_entry_point function=homing_override\n_KLICKY_STATUS_HOMING\n{% if \'z\' not in printer.toolhead.homed_axes %}\n{% if not enable_z_hop %}\n_KlickyDebug msg="homing_override z_hop disabled"\n{% set kinematic_z = safe_z %}\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if \'z\' in printer.toolhead.homed_axes %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, with homed axes, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% else %}\n{% if verbose %}\n{ action_respond_info("Z not homed, forcing full G28") }\n{% endif %}\n_KlickyDebug msg="homing_override Z not homed, setting position as X=Y=0 Z={kinematic_z}"\nSET_KINEMATIC_POSITION X=0 Y=0 Z={kinematic_z}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% set home_x, home_y, home_z = True, True, True %}\n{% endif %}\n{% endif %}\n{% if ((attachmove_y == 0 and override_homing == \'\' ) or (override_homing == \'Y\'))%}\n{% if home_y %}\n{% if override_homing == \'Y\' %}\n_KlickyDebug msg="homing_override Y homing first override, due to override_homing = Y"\n{% else %}\n_KlickyDebug msg="homing_override Y homing first override, due to attachmove_y = 0"\n{% endif %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop-home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% set home_y = False %}\n{% endif %}\n{% if home_x %}\n{% if verbose %}\n{ action_respond_info("Homing X") }\n{% endif %}\n{% if printer["gcode_macro _HOME_X"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_X external script to handle the X homing"\n_HOME_X\n{% else %}\n_KlickyDebug msg="homing_override Homing X, G28 X0"\nG28 X0\n{% if home_backoff_x != 0 %}\n{% if (printer.configfile.settings.stepper_x.position_endstop > (printer.configfile.settings.stepper_x.position_min|default(0) + printer.configfile.settings.stepper_x.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_y %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y, G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if verbose %}\n{ action_respond_info("Homing Z") }\n{% endif %}\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe configured as a virtual Z endstop attaching probe"\nAttach_Probe\n{% if leave_probe_attached %}\n_Probe_Lock\n{% endif %}\n{% elif dock_on_zhome == True %}\nDock_Probe\n{% endif %}\n_Home_Z\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe no longer required, docking probe"\nDock_Probe\n{% elif dock_on_zhome == False %}\nDock_Probe\n{% endif %}\n{% endif %}\n_CheckProbe action=query\n_Park_Toolhead\n_exit_point function=homing_override\n_KLICKY_STATUS_READY', 'axes': 'xyz'}, 'gcode_macro _klicky_status_leveling': {'gcode': '\n{% if printer[\'gcode_macro status_leveling\'] is defined %}\n_KlickyDebug msg="_klicky_status_leveling activating the LED STATUS_LEVELING"\nSTATUS_LEVELING\n{% endif %}'}, 'gcode_macro _Home_Z': {'gcode': '\n{% set z_endstop_x = printer["gcode_macro _Probe_Variables"].z_endstop_x %}\n{% set z_endstop_y = printer["gcode_macro _Probe_Variables"].z_endstop_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Home_Z\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n{% else %}\n_KlickyDebug msg="_Home_Z XY Axis homed"\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="_Home_Z Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n_KlickyDebug msg="_Home_Z moving to Z endstop position G0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}"\nG0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}\n_KlickyDebug msg="_Home_Z Homing Z G28 Z"\nG28 Z0\n_KlickyDebug msg="_Home_Z toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_exit_point function=Home_Z'}, 'fan': {'pin': 'P2.3'}, 'gcode_macro _klicky_status_meshing': {'gcode': '\n{% if printer[\'gcode_macro status_meshing\'] is defined %}\n_KlickyDebug msg="_klicky_status_meshing activating the LED STATUS_MESHING"\nSTATUS_MESHING\n{% endif %}'}, 'tmc2209 stepper_x': {'uart_pin': 'P1.10', 'stealthchop_threshold': '0', 'run_current': '1.4', 'interpolate': 'False'}, 'mcu': {'baud': '250000', 'restart_method': 'command', 'serial': '/dev/ttyAMA0'}, 'stepper_z1': {'rotation_distance': '2', 'step_pin': 'P2.13', 'microsteps': '16', 'dir_pin': '!P0.11', 'enable_pin': '!P2.12'}, 'gcode_macro _klicky_status_calibrating_z': {'gcode': '\n{% if printer[\'gcode_macro status_calibrating_z\'] is defined %}\n_KlickyDebug msg="_klicky_status_calibrating_z activating the LED STATUS_CALIBRATING_Z"\nSTATUS_CALIBRATING_Z\n{% endif %}'}, 'tmc2208 stepper_z': {'uart_pin': 'P1.8', 'hold_current': '0.200', 'stealthchop_threshold': '50', 'run_current': '0.70'}, 'tmc2208 extruder': {'driver_hstrt': '7', 'driver_toff': '4', 'sense_resistor': '0.11', 'driver_hend': '6', 'interpolate': 'false', 'stealthchop_threshold': '0', 'driver_tbl': '0', 'run_current': '0.7', 'uart_pin': 'P1.1', 'hold_current': '0.100'}, 'gcode_macro filament_wyladuj': {'gcode': "\nSAVE_GCODE_STATE NAME=unload_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Unloading filament...\nG0 E-5 F1000\nG4 P3000\nG0 E5 F1000\nG0 E-35 F5200\nG0 E-100 F800\nM117 Filament unloaded!\nRESTORE_GCODE_STATE NAME=unload_state"}, 'screws_tilt_adjust': {'horizontal_move_z': '10', 'screw6_name': 'rear right', 'screw4_name': 'rear left', 'screw6': '324, 320', 'screw1_name': 'front left', 'screw2_name': 'front middle', 'speed': '500', 'screw_thread': 'CW-M3', 'screw5_name': 'rear middle', 'screw2': '189, 32', 'screw3': '324, 32', 'screw1': '44, 32', 'screw3_name': 'front right', 'screw4': '44, 320', 'screw5': '189, 320'}, 'gcode_macro BED_MESH_CALIBRATE': {'rename_existing': '_BED_MESH_CALIBRATE', 'description': 'Perform Mesh Bed Leveling with klicky automount', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Bed Mesh Calibrate") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_MESHING\n_BED_MESH_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe'}, 'gcode_macro Dock_Probe_Unlock': {'gcode': '\n_Probe_Unlock\nDock_Probe', 'description': 'Docks Klicky Probe even if it was locked'}, 'gcode_macro PROBE_ACCURACY': {'rename_existing': '_PROBE_ACCURACY', 'description': 'Probe Z-height accuracy at current XY position with klicky automount', 'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_accuracy Axis homed"\n_KlickyDebug msg="probe_accuracy Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n_entry_point function=PROBE_ACCURACY\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_ACCURACY with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nAttach_Probe back=1\n_KlickyDebug msg="probe_accuracy calling klipper probe accuracy"\n_PROBE_ACCURACY {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe back=1\n_exit_point function=PROBE_ACCURACY move=1'}, 'display_status': {}, 'gcode_macro _klicky_check_variables_version': {'gcode': '\n{% set version = printer["gcode_macro _User_Variables"].version|default(0) %}\n{% if version != 1 %}\n{ action_raise_error("Please update your klicky variables, there are some functionality changes") }\n{% endif %}'}, 'gcode_macro LED_off': {'gcode': '\nSET_PIN PIN=LED VALUE=0'}, 'gcode_macro _klicky_status_homing': {'gcode': '\n{% if printer[\'gcode_macro status_homing\'] is defined %}\n_KlickyDebug msg="_klicky_status_homing activating the LED STATUS_HOMING"\nSTATUS_HOMING\n{% endif %}'}, 'gcode_macro PROBE_CALIBRATE': {'rename_existing': '_PROBE_CALIBRATE', 'description': 'Calibrate the probes z_offset with klicky automount', 'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_calibrate Axis homed"\n_KlickyDebug msg="probe_calibrate Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_CALIBRATE with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nG90\nAttach_Probe back=1\n_KLICKY_STATUS_CALIBRATING_Z\n_KlickyDebug msg="probe_calibrate calling klipper probe_calibrate"\n_PROBE_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nM118 moving the toolhead 20 mm from the bed\n_KlickyDebug msg="probe_calibrate Moving Z up by 20mm"\nTESTZ Z=20\nM118 remove manually the probe and continue calibration\n_KLICKY_STATUS_READY'}, 'gcode_macro _RetractKlickyDock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_retract = printer["gcode_macro _User_Variables"].servo_retract|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_RetractKlickyDock Klicky servo configuration enabled"\n{% if servo_retract == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo retract angle specified") }\n{% endif %}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _RetractDock"] is defined %}\n_KlickyDebug msg="_RetractKlickyDock calling _RetractDock"\n_RetractDock\n{% endif %}', 'description': 'Retracts Klicky servo-controlled dock'}, 'bed_mesh': {'horizontal_move_z': '7', 'algorithm': 'bicubic', 'mesh_pps': '2,3', 'mesh_min': '10,10', 'mesh_max': '305,290', 'fade_start': '1', 'bicubic_tension': '0.2', 'fade_end': '10', 'probe_count': '4,4', 'speed': '500'}, 'gcode_macro CANCEL_PRINT': {'rename_existing': 'BASE_CANCEL_PRINT', 'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT'}, 'gcode_macro _Probe_Variables': {'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'gcode': '', 'variable_probe_attached': 'False', 'variable_probe_lock': 'False', 'variable_probe_state': 'False'}, 'gcode_macro _DeployKlickyDock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_deploy = printer["gcode_macro _User_Variables"].servo_deploy|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_DeployKlickyDock Klicky servo configuration enabled"\n{% if servo_deploy == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo deploy angle specified") }\n{% endif %}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _DeployDock"] is defined %}\n_KlickyDebug msg="_DeployKlickyDock calling _DeployDock"\n_DeployDock\n{% endif %}', 'description': 'Deploys Klicky servo-controlled dock'}, 'gcode_macro _Umbilical_Path': {'gcode': '\n{% set umbilical = printer["gcode_macro _User_Variables"].umbilical %}\n{% set umbilical_x = printer["gcode_macro _User_Variables"].umbilical_x %}\n{% set umbilical_y = printer["gcode_macro _User_Variables"].umbilical_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% if umbilical %}\n_entry_point function=Umbilical_Path\n_KlickyDebug msg="_Umbilical_Path moving to G0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}"\nG0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}\n_exit_point function=Umbilical_Path\n{% endif %}'}, 'gcode_macro G29': {'gcode': '\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=default\nG1 X10 Y10 Z5 F4000'}, 'gcode_macro M125': {'gcode': '\nSAVE_GCODE_STATE NAME=parking\nM117 Parking toolhead\nG91\nG1 Z5 F300\nG90\nG1 X12 Y10 F4000\nRESTORE_GCODE_STATE name=parking'}, 'extruder': {'control': 'pid', 'max_extrude_cross_section': '0.85', 'pressure_advance_smooth_time': '0.03', 'max_extrude_only_distance': '1400', 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'min_temp': '0', 'enable_pin': '!P1.16', 'pressure_advance': '0.025', 'max_extrude_only_velocity': '75', 'dir_pin': '!P1.14', 'pid_kp': '20.167', 'full_steps_per_rotation': '200', 'heater_pin': 'P2.7', 'pid_kd': '73.358', 'pid_ki': '1.386', 'filament_diameter': '1.750', 'gear_ratio': '50:10', 'sensor_pin': 'P0.24', 'nozzle_diameter': '0.400', 'rotation_distance': '22.67895', 'step_pin': 'P1.15', 'microsteps': '16', 'max_extrude_only_accel': '1500', 'max_temp': '280'}}, 'settings': {'respond': {'default_prefix': 'echo:', 'default_type': 'echo'}, 'force_move': {'enable_force_move': True}, 'gcode_macro _klicky_status_homing': {'gcode': '\n{% if printer[\'gcode_macro status_homing\'] is defined %}\n_KlickyDebug msg="_klicky_status_homing activating the LED STATUS_HOMING"\nSTATUS_HOMING\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _klicky_status_cleaning': {'gcode': '\n{% if printer[\'gcode_macro status_cleaning\'] is defined %}\n_KlickyDebug msg="_klicky_status_cleaning activating the LED STATUS_CLEANING"\nSTATUS_CLEANING\n{% endif %}', 'description': 'G-Code macro'}, 'output_pin led': {'shutdown_value': 0.0, 'scale': 100.0, 'cycle_time': 0.01, 'pin': 'P2.4', 'maximum_mcu_duration': 0.0, 'value': 0.0, 'hardware_pwm': False, 'pwm': True}, 'gcode_macro led_off': {'gcode': '\nSET_PIN PIN=LED VALUE=0', 'description': 'G-Code macro'}, 'gcode_macro filament_laduj': {'gcode': "\nSAVE_GCODE_STATE NAME=load_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Loading filament...\nG0 E70 F600\nG4 P1000\nG0 E70 F200\nM400e\nM117 Filament loaded!\nRESTORE_GCODE_STATE NAME=load_state", 'description': 'G-Code macro'}, 'probe': {'samples_tolerance_retries': 3, 'deactivate_on_each_sample': True, 'pin': 'P1.27', 'samples_result': 'median', 'samples_tolerance': 0.02, 'activate_gcode': '', 'deactivate_gcode': '', 'sample_retract_dist': 4.0, 'x_offset': -19.5, 'y_offset': -27.0, 'samples': 1, 'z_offset': 5.2, 'speed': 10.0, 'lift_speed': 8.0}, 'gcode_macro _klicky_status_busy': {'gcode': '\n{% if printer[\'gcode_macro status_busy\'] is defined %}\n_KlickyDebug msg="_klicky_status_busy activating the LED STATUS_BUSY"\nSTATUS_BUSY\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _retractklickydock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_retract = printer["gcode_macro _User_Variables"].servo_retract|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_RetractKlickyDock Klicky servo configuration enabled"\n{% if servo_retract == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo retract angle specified") }\n{% endif %}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_RetractKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _RetractDock"] is defined %}\n_KlickyDebug msg="_RetractKlickyDock calling _RetractDock"\n_RetractDock\n{% endif %}', 'description': 'Retracts Klicky servo-controlled dock'}, 'gcode_macro _checkprobe': {'variable_probe_state': '0', 'description': 'G-Code macro', 'gcode': '\nQuery_Probe\n_SetProbeState action={ params.ACTION }'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT', 'description': 'G-Code macro', 'rename_existing': 'BASE_CANCEL_PRINT'}, 'printer': {'square_corner_velocity': 5.0, 'move_flush_time': 0.05, 'max_accel': 8000.0, 'buffer_time_start': 0.25, 'buffer_time_low': 1.0, 'max_z_accel': 100.0, 'max_velocity': 700.0, 'max_z_velocity': 8.0, 'kinematics': 'corexy', 'max_accel_to_decel': 4000.0, 'buffer_time_high': 2.0}, 'gcode_macro probe_calibrate': {'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_calibrate Axis homed"\n_KlickyDebug msg="probe_calibrate Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_CALIBRATE with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nG90\nAttach_Probe back=1\n_KLICKY_STATUS_CALIBRATING_Z\n_KlickyDebug msg="probe_calibrate calling klipper probe_calibrate"\n_PROBE_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nM118 moving the toolhead 20 mm from the bed\n_KlickyDebug msg="probe_calibrate Moving Z up by 20mm"\nTESTZ Z=20\nM118 remove manually the probe and continue calibration\n_KLICKY_STATUS_READY', 'description': 'Calibrate the probes z_offset with klicky automount', 'rename_existing': '_PROBE_CALIBRATE'}, 'gcode_macro _user_variables': {'variable_dock_on_zhome': 'True', 'variable_park_toolhead': 'False', 'variable_servo_delay': '250', 'variable_z_drop_speed': '10', 'variable_release_speed': '75', 'variable_umbilical': 'False', 'variable_servo_retract': '11', 'variable_docklocation_y': '32.5', 'variable_docklocation_x': '-10', 'variable_move_accel': '1000', 'variable_docklocation_z': '-128', 'variable_enable_dock_servo': 'False', 'variable_attachmove2_x': '0', 'variable_attachmove2_y': '0', 'variable_attachmove2_z': '0', 'variable_servo_name': "'NAME'", 'variable_dock_speed': '50', 'variable_attachmove_z': '0', 'variable_attachmove_y': '0', 'variable_attachmove_x': '-20', 'variable_enable_z_hop': 'True', 'description': 'G-Code macro', 'variable_dockmove_z': '0', 'gcode': '\n{% set Mx = printer[\'configfile\'].config["stepper_x"]["position_max"]|float %}\n{% set My = printer[\'configfile\'].config["stepper_y"]["position_max"]|float %}\n{% set Ox = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set Oy = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% set Oz = printer[\'configfile\'].config["probe"]["z_offset"]|float %}\n{% if z_endstop_x != 0 or z_endstop_y != 0 %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }\n{% endif %}', 'variable_override_homing': "''", 'variable_servo_deploy': '10', 'variable_version': '1', 'variable_umbilical_x': '15', 'variable_umbilical_y': '15', 'variable_parkposition_x': '125', 'variable_parkposition_y': '125', 'variable_parkposition_z': '12', 'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'variable_dockmove_y': '40', 'variable_dockmove_x': '0', 'variable_safe_z': '12', 'variable_verbose': 'True', 'variable_max_bed_x': '330', 'variable_max_bed_y': '325', 'variable_travel_speed': '200', 'variable_home_backoff_y': '5', 'variable_home_backoff_x': '5', 'variable_debug': 'False'}, 'filament_switch_sensor runoutsensor': {'runout_gcode': 'M600', 'pause_delay': 0.5, 'switch_pin': 'P1.26', 'pause_on_runout': True, 'event_delay': 3.0}, 'gcode_macro m600': {'gcode': '\n{% set X = params.X|default(50)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set Z = params.Z|default(10)|float %}\nSAVE_GCODE_STATE NAME=M600_state\nPAUSE\nG91\nG1 Z{Z}\nG90\nG1 X{X} Y{Y} F3000\nG91\nRESTORE_GCODE_STATE NAME=M600_state', 'description': 'G-Code macro'}, 'z_tilt': {'retries': 6, 'horizontal_move_z': 10.0, 'z_positions': [[418.0, 189.0], [-88.0, 189.0]], 'retry_tolerance': 0.0075, 'points': [[324.0, 189.0], [44.0, 189.0]], 'speed': 500.0}, 'gcode_macro _park_toolhead': {'gcode': '\n{% set park_toolhead = printer["gcode_macro _User_Variables"].park_toolhead %}\n{% set parkposition_x = printer["gcode_macro _User_Variables"].parkposition_x %}\n{% set parkposition_y = printer["gcode_macro _User_Variables"].parkposition_y %}\n{% set parkposition_z = printer["gcode_macro _User_Variables"].parkposition_z %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Park_Toolhead\n{% if park_toolhead and \'xyz\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Parking Toolhead") }\n{% endif %}\n{% if parkposition_z == -128 %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="_Park_Toolhead moving to G0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}"\nG0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F{travel_feedrate}\n{% endif %}\n{% endif %}\n_exit_point function=Park_Toolhead', 'description': 'G-Code macro'}, 'heater_bed': {'control': 'pid', 'pid_kp': 53.533, 'pullup_resistor': 4700.0, 'sensor_pin': 'P0.25', 'heater_pin': 'P2.5', 'max_power': 1.0, 'min_extrude_temp': 170.0, 'sensor_type': 'Generic 3950', 'inline_resistor': 0.0, 'pid_kd': 662.471, 'pwm_cycle_time': 0.1, 'pid_ki': 1.081, 'min_temp': 0.0, 'max_temp': 130.0, 'smooth_time': 1.0}, 'gcode_macro m125': {'gcode': '\nSAVE_GCODE_STATE NAME=parking\nM117 Parking toolhead\nG91\nG1 Z5 F300\nG90\nG1 X12 Y10 F4000\nRESTORE_GCODE_STATE name=parking', 'description': 'G-Code macro'}, 'gcode_macro _setprobestate': {'gcode': '\n{% set query_probe_triggered = printer.probe.last_query %}\n{% set action  = params.ACTION|default(\'\') %}\n{% if query_probe_triggered %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ False }\n{% else %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ True }\n{% endif %}\n{% if action == \'query\' %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_state VALUE={ query_probe_triggered }\n{% endif %}\n{% if not query_probe_triggered and action == \'dock\' %}\n{ action_raise_error("Probe dock failed!") }\n{% endif %}\n{% if query_probe_triggered and action == \'attach\' %}\n{ action_raise_error("Probe attach failed!") }\n{% endif %}', 'description': 'G-Code macro'}, 'bed_mesh default': {'tension': 0.2, 'min_x': 10.0, 'min_y': 10.0, 'y_count': 4, 'mesh_y_pps': 3, 'x_count': 4, 'version': 1, 'algo': 'bicubic', 'mesh_x_pps': 2, 'max_y': 289.99, 'max_x': 310.0, 'points': [[-0.0525, 0.005625, -0.056875, 0.003125], [-0.195, -0.056875, -0.094375, -0.076875], [-0.144375, 0.00125, -0.084375, -0.134375], [-0.020625, -0.024375, -0.0175, -0.043125]]}, 'virtual_sdcard': {'path': '~/gcode_files', 'on_error_gcode': ''}, 'tmc2209 stepper_y': {'driver_pwm_ofs': 36, 'driver_pwm_autoscale': True, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_hend': 0, 'uart_address': 0, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': False, 'uart_pin': 'P1.9', 'driver_hstrt': 5, 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 1.4, 'driver_sgthrs': 0, 'stealthchop_threshold': 0.0, 'hold_current': 2.0, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro _probe_unlock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to False"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }', 'description': 'Unlocks Klicky Probe state'}, 'verify_heater extruder': {'max_error': 120.0, 'check_gain_time': 20.0, 'hysteresis': 5.0, 'heating_gain': 2.0}, 'stepper_z': {'homing_positive_dir': False, 'homing_retract_dist': 5.0, 'full_steps_per_rotation': 200, 'endstop_pin': 'probe:z_virtual_endstop', 'rotation_distance': 2.0, 'gear_ratio': [], 'second_homing_speed': 2.5, 'step_pin': 'P0.22', 'position_min': -2.0, 'microsteps': 16, 'homing_speed': 5.0, 'position_max': 350.0, 'dir_pin': '!P2.11', 'homing_retract_speed': 5.0, 'enable_pin': '!P0.21'}, 'stepper_y': {'homing_positive_dir': True, 'homing_retract_dist': 0.0, 'position_endstop': 325.0, 'full_steps_per_rotation': 200, 'endstop_pin': '!P1.28', 'rotation_distance': 40.0, 'gear_ratio': [], 'second_homing_speed': 10.0, 'step_pin': 'P0.19', 'homing_speed': 60.0, 'microsteps': 16, 'position_min': -1.0, 'dir_pin': 'P0.20', 'position_max': 325.0, 'homing_retract_speed': 60.0, 'enable_pin': '!P2.8'}, 'stepper_x': {'homing_positive_dir': True, 'homing_retract_dist': 0.0, 'position_endstop': 329.0, 'full_steps_per_rotation': 200, 'endstop_pin': '!P1.29', 'rotation_distance': 40.0, 'gear_ratio': [], 'second_homing_speed': 10.0, 'step_pin': 'P2.2', 'position_min': -10.0, 'microsteps': 16, 'homing_speed': 60.0, 'position_max': 329.0, 'dir_pin': 'P2.6', 'homing_retract_speed': 60.0, 'enable_pin': '!P2.1'}, 'input_shaper': {'damping_ratio_x': 0.1, 'damping_ratio_y': 0.1, 'shaper_type_x': 'zv', 'shaper_type_y': 'mzv', 'shaper_freq_x': 93.2, 'shaper_freq_y': 52.4, 'shaper_type': 'mzv'}, 'gcode_macro print_start': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}\nG90 ; use absolute coordinates\nM83 ; extruder relative mode\nM104 S150 ; set extruder temp 150c for auto bed leveling\nM140 S{BED_TEMP} ; set bed temp\nM190 S{BED_TEMP} ; wait for bed temp\nM104 S{EXTRUDER_TEMP} ; set extruder temp\nM109 S{EXTRUDER_TEMP} ; wait for extruder temp\nG28 ; home all\nG1 Z5 F240 ; lower bed before moving\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X60 Y5 Z0.2 F5000.0 ;Move to start position\nG1 X60 E9 F1000 ; intro line\nG1 X100 E12.5 F1000 ; intro line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up', 'description': 'G-Code macro'}, 'gcode_macro _deployklickydock': {'gcode': '\n{% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}\n{% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}\n{% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}\n{% set servo_deploy = printer["gcode_macro _User_Variables"].servo_deploy|default(360) %}\nM400\n{% if enable_dock_servo != False %}\n_KlickyDebug msg="_DeployKlickyDock Klicky servo configuration enabled"\n{% if servo_deploy == 360 %}\n{ action_raise_error("Klicky: servo active on klicky-variables, but no servo deploy angle specified") }\n{% endif %}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}"\nSET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}\nM400\nG4 P{servo_delay|int}\n_KlickyDebug msg="_DeployKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"\nSET_SERVO SERVO={servo_name|string} WIDTH=0\n{% elif printer["gcode_macro _DeployDock"] is defined %}\n_KlickyDebug msg="_DeployKlickyDock calling _DeployDock"\n_DeployDock\n{% endif %}', 'description': 'Deploys Klicky servo-controlled dock'}, 'gcode_macro low_temp_check': {'gcode': '\n{% set T = params.T|default(210) %}\n{% if printer.extruder.target != 0 %}\n{% if printer.extruder.temperature < printer.extruder.target %}\nM117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.\nM109 S{printer.extruder.target|float}\n{% endif %}\n{% else %}\n{% if printer.extruder.target < T %}\nM117 No setpoint, heating to {T}.\nM109 S{T}\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'screws_tilt_adjust': {'horizontal_move_z': 10.0, 'screw6_name': 'rear right', 'screw3_name': 'front right', 'screw1_name': 'front left', 'screw2_name': 'front middle', 'speed': 500.0, 'screw_thread': 'CW-M3', 'screw5_name': 'rear middle', 'screw4_name': 'rear left', 'screw2': [189.0, 32.0], 'screw3': [324.0, 32.0], 'screw1': [44.0, 32.0], 'screw6': [324.0, 320.0], 'screw4': [44.0, 320.0], 'screw5': [189.0, 320.0]}, 'gcode_macro _exit_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move  = params.MOVE|default(0) %}\n{% set speed = printer["gcode_macro _User_Variables"].travel_speed %}\nM400\nSET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}\nSET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}\nRESTORE_GCODE_STATE NAME={function} MOVE={move} MOVE_SPEED={speed}', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': '\nSET_PIN PIN=LED VALUE=100', 'description': 'G-Code macro'}, 'homing_override': {'gcode': '\n_User_Variables\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set kinematic_z = 0 %}\n{% set dock_on_zhome = printer["gcode_macro _User_Variables"].dock_on_zhome|default(True) %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set home_backoff_x = printer["gcode_macro _User_Variables"].home_backoff_x|default(0) %}\n{% set home_backoff_y = printer["gcode_macro _User_Variables"].home_backoff_y|default(0) %}\n{% set override_homing = printer["gcode_macro _User_Variables"].override_homing|default(\'\') %}\n_klicky_check_variables_version\n_CheckProbe action=query\n{% set home_x, home_y, home_z, leave_probe_attached = False, False, False, False %}\n{% if \'PROBE_LOCK\' in params%}\n{% if verbose %}\n{ action_respond_info("PROBE_LOCK = True") }\n{% endif %}\n{% set leave_probe_attached = True %}\n{% endif %}\n{% if not \'X\' in params\nand not \'Y\' in params\nand not \'Z\' in params %}\n{% set home_x, home_y, home_z = True, True, True %}\n_KlickyDebug msg="homing_override goint to home all axes"\n{% else %}\n{% if \'X\' in params %}\n{% set home_x = True %}\n_KlickyDebug msg="homing_override goint to home X"\n{% endif %}\n{% if \'Y\' in params %}\n{% set home_y = True %}\n_KlickyDebug msg="homing_override goint to home Y"\n{% endif %}\n{% if \'Z\' in params %}\n{% set home_z = True %}\n_KlickyDebug msg="homing_override goint to home Z"\n{% endif %}\n{% if \'X\' in params\nand \'Y\' in params\nand \'Z\' in params %}\n_Homing_Variables reset=1\n_KlickyDebug msg="homing_override goint to home all axes"\n{% endif %}\n{% endif %}\n_entry_point function=homing_override\n_KLICKY_STATUS_HOMING\n{% if \'z\' not in printer.toolhead.homed_axes %}\n{% if not enable_z_hop %}\n_KlickyDebug msg="homing_override z_hop disabled"\n{% set kinematic_z = safe_z %}\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if \'z\' in printer.toolhead.homed_axes %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, with homed axes, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% else %}\n{% if verbose %}\n{ action_respond_info("Z not homed, forcing full G28") }\n{% endif %}\n_KlickyDebug msg="homing_override Z not homed, setting position as X=Y=0 Z={kinematic_z}"\nSET_KINEMATIC_POSITION X=0 Y=0 Z={kinematic_z}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="homing_override toolhead too low, raising it to {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% set home_x, home_y, home_z = True, True, True %}\n{% endif %}\n{% endif %}\n{% if ((attachmove_y == 0 and override_homing == \'\' ) or (override_homing == \'Y\'))%}\n{% if home_y %}\n{% if override_homing == \'Y\' %}\n_KlickyDebug msg="homing_override Y homing first override, due to override_homing = Y"\n{% else %}\n_KlickyDebug msg="homing_override Y homing first override, due to attachmove_y = 0"\n{% endif %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop-home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% set home_y = False %}\n{% endif %}\n{% if home_x %}\n{% if verbose %}\n{ action_respond_info("Homing X") }\n{% endif %}\n{% if printer["gcode_macro _HOME_X"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_X external script to handle the X homing"\n_HOME_X\n{% else %}\n_KlickyDebug msg="homing_override Homing X, G28 X0"\nG28 X0\n{% if home_backoff_x != 0 %}\n{% if (printer.configfile.settings.stepper_x.position_endstop > (printer.configfile.settings.stepper_x.position_min|default(0) + printer.configfile.settings.stepper_x.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}"\nG0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_y %}\n{% if verbose %}\n{ action_respond_info("Homing Y") }\n{% endif %}\n{% if printer["gcode_macro _HOME_Y"] is defined %}\n_KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"\n_HOME_Y\n{% else %}\n_KlickyDebug msg="homing_override Homing Y, G28 Y0"\nG28 Y0\n{% if home_backoff_y != 0 %}\n{% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}\n{% else %}\n_KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"\nG0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}\n{%endif %}\n{%endif %}\n{% endif %}\n{% endif %}\n{% if home_z %}\n{% if verbose %}\n{ action_respond_info("Homing Z") }\n{% endif %}\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe configured as a virtual Z endstop attaching probe"\nAttach_Probe\n{% if leave_probe_attached %}\n_Probe_Lock\n{% endif %}\n{% elif dock_on_zhome == True %}\nDock_Probe\n{% endif %}\n_Home_Z\n{% if printer[\'configfile\'].config["stepper_z"]["endstop_pin"] == \'probe:z_virtual_endstop\' %}\n_KlickyDebug msg="homing_override probe no longer required, docking probe"\nDock_Probe\n{% elif dock_on_zhome == False %}\nDock_Probe\n{% endif %}\n{% endif %}\n_CheckProbe action=query\n_Park_Toolhead\n_exit_point function=homing_override\n_KLICKY_STATUS_READY', 'axes': 'xyz'}, 'gcode_macro _entry_point': {'gcode': '\n{% set function  = \'pre_\' ~ params.FUNCTION %}\n{% set move_accel = printer["gcode_macro _User_Variables"].move_accel|default(1000) %}\nM400\nSAVE_GCODE_STATE NAME={function}\nSET_GCODE_OFFSET Z=0\nG90\nSET_VELOCITY_LIMIT ACCEL={move_accel}', 'description': 'G-Code macro'}, 'mcu': {'baud': 250000, 'restart_method': 'command', 'serial': '/dev/ttyAMA0', 'max_stepper_error': 2.5e-05}, 'gcode_macro attach_probe_lock': {'gcode': '\nAttach_Probe\n_Probe_Lock', 'description': 'Attaches Klicky Probe, can only be docked after unlocking'}, 'gcode_macro dock_probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe Axis homed"\n_entry_point function=Dock_Probe\n{% if probe_attached and not probe_lock %}\n_KlickyDebug msg="Dock_Probe going to dock probe"\n{% if verbose %}\n{ action_respond_info("Docking Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Dock_Probe toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n_KlickyDebug msg="Dock_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}"\nG0 Z{docklocation_z|int + dockmove_z|int} F{release_feedrate}\n{% endif %}\n_KlickyDebug msg="Dock_Probe moving from the dock to G0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n_KlickyDebug msg="Dock_Probe moving away from the dock to G0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int + dockmove_x|int - attachmove_x|int} Y{docklocation_y|int + dockmove_y|int - attachmove_y|int} F{release_feedrate}\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Dock_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\nG4 P1000\n_CheckProbe action=dock\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe locked not docking probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already docked") }\n{% endif %}\n_KlickyDebug msg="Dock_Probe probe already docked, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Dock_Probe move={goback}', 'description': 'Docks Klicky Probe'}, 'gcode_macro bed_mesh_calibrate': {'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Bed Mesh Calibrate") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_MESHING\n_BED_MESH_CALIBRATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe', 'description': 'Perform Mesh Bed Leveling with klicky automount', 'rename_existing': '_BED_MESH_CALIBRATE'}, 'tmc2208 extruder': {'driver_pwm_ofs': 36, 'driver_hstrt': 7, 'driver_toff': 4, 'sense_resistor': 0.11, 'driver_hend': 6, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': False, 'stealthchop_threshold': 0.0, 'hold_current': 0.1, 'driver_tbl': 0, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 0.7, 'uart_address': 0, 'uart_pin': 'P1.1', 'driver_pwm_autoscale': True, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro dock_probe_unlock': {'gcode': '\n_Probe_Unlock\nDock_Probe', 'description': 'Docks Klicky Probe even if it was locked'}, 'tmc2208 stepper_z1': {'driver_pwm_ofs': 36, 'driver_hstrt': 5, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_pwm_autoscale': True, 'driver_hend': 0, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': True, 'stealthchop_threshold': 50.0, 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 0.7, 'uart_address': 0, 'uart_pin': 'P1.4', 'hold_current': 0.2, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro _probe_lock': {'gcode': '\n_KlickyDebug msg="_Probe_Lock setting probe_lock variable to True"\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ True }', 'description': 'Locks Klicky Probe state'}, 'gcode_macro g29': {'gcode': '\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=default\nG1 X10 Y10 Z5 F4000', 'description': 'G-Code macro'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY)  %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE'}, 'temperature_sensor zasilacz': {'pullup_resistor': 4700.0, 'sensor_pin': 'P0.23', 'sensor_type': 'Generic 3950', 'inline_resistor': 0.0, 'min_temp': 0.0, 'max_temp': 120.0}, 'gcode_macro _klickydebug': {'gcode': '\n{% set message  = params.MSG %}\n{% set debug = printer["gcode_macro _User_Variables"].debug|default(False) %}\n{% if debug %}\n{ action_respond_info(message) }\n{% endif %}', 'description': 'G-Code macro'}, 'idle_timeout': {'gcode': '\nTURN_OFF_HEATERS\nM84; disable steppers', 'timeout': 600.0}, 'gcode_macro prime_line': {'gcode': '\nM117 Prime Line\nG92 E0 ;Reset Extruder\nG1 Z2.0 F1000 ;Move Z Axis up\nG1 X20 Y30 Z0.28 F5000.0 ;Move to start position\nG1 X20 Y190.0 Z0.28 F1500.0 E15 ;Draw the first line\nG1 X22 Y190.0 Z0.28 F5000.0 ;Move to side a little\nG1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line\nG92 E0 ;Reset Extruder\nG1 E-2 F500\nG92 E0.0\nG1 Z2.0 F1000 ;Move Z Axis up\nlift_z', 'description': 'G-Code macro'}, 'fan': {'cycle_time': 0.01, 'pin': 'P2.3', 'off_below': 0.0, 'shutdown_speed': 0.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'hardware_pwm': False}, 'gcode_macro _klicky_status_meshing': {'gcode': '\n{% if printer[\'gcode_macro status_meshing\'] is defined %}\n_KlickyDebug msg="_klicky_status_meshing activating the LED STATUS_MESHING"\nSTATUS_MESHING\n{% endif %}', 'description': 'G-Code macro'}, 'tmc2209 stepper_x': {'driver_pwm_lim': 12, 'driver_pwm_ofs': 36, 'driver_iholddelay': 8, 'driver_hstrt': 5, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_hend': 0, 'driver_pwm_reg': 8, 'driver_sgthrs': 0, 'interpolate': False, 'uart_pin': 'P1.10', 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 1.4, 'uart_address': 0, 'stealthchop_threshold': 0.0, 'hold_current': 2.0, 'driver_tpowerdown': 20, 'driver_pwm_autoscale': True, 'driver_pwm_freq': 1}, 'stepper_z1': {'full_steps_per_rotation': 200, 'rotation_distance': 2.0, 'gear_ratio': [], 'step_pin': 'P2.13', 'microsteps': 16, 'dir_pin': '!P0.11', 'enable_pin': '!P2.12'}, 'gcode_macro _klicky_status_calibrating_z': {'gcode': '\n{% if printer[\'gcode_macro status_calibrating_z\'] is defined %}\n_KlickyDebug msg="_klicky_status_calibrating_z activating the LED STATUS_CALIBRATING_Z"\nSTATUS_CALIBRATING_Z\n{% endif %}', 'description': 'G-Code macro'}, 'tmc2208 stepper_z': {'driver_pwm_ofs': 36, 'driver_hstrt': 5, 'driver_toff': 3, 'sense_resistor': 0.11, 'driver_hend': 0, 'driver_pwm_reg': 8, 'driver_iholddelay': 8, 'interpolate': True, 'uart_pin': 'P1.8', 'hold_current': 0.2, 'driver_tbl': 2, 'driver_pwm_autograd': True, 'driver_pwm_grad': 14, 'run_current': 0.7, 'uart_address': 0, 'stealthchop_threshold': 50.0, 'driver_pwm_autoscale': True, 'driver_tpowerdown': 20, 'driver_pwm_lim': 12, 'driver_pwm_freq': 1}, 'gcode_macro z_tilt_adjust': {'rename_existing': '_Z_TILT_ADJUST', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Z Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_Z_TILT_ADJUST {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe\nG28 Z0'}, 'gcode_macro filament_wyladuj': {'gcode': "\nSAVE_GCODE_STATE NAME=unload_state\nG91\n{% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}\nM117 Heating...\nM104 S{params.TEMP|default(210, true)}\nTEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}\n{% endif %}\nM117 Unloading filament...\nG0 E-5 F1000\nG4 P3000\nG0 E5 F1000\nG0 E-35 F5200\nG0 E-100 F800\nM117 Filament unloaded!\nRESTORE_GCODE_STATE NAME=unload_state", 'description': 'G-Code macro'}, 'gcode_macro screws_tilt_calculate': {'rename_existing': '_SCREWS_TILT_CALCULATE', 'description': '', 'gcode': '\n{% set V = printer["gcode_macro _User_Variables"].verbose %}\n{% if V %}\n{ action_respond_info("Screws Tilt Adjust") }\n{% endif %}\n_CheckProbe action=query\nG90\nAttach_Probe\n_KLICKY_STATUS_LEVELING\n_SCREWS_TILT_CALCULATE {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe'}, 'bed_mesh': {'horizontal_move_z': 7.0, 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'mesh_max': [305.0, 290.0], 'fade_start': 1.0, 'bicubic_tension': 0.2, 'fade_end': 10.0, 'mesh_min': [10.0, 10.0], 'split_delta_z': 0.025, 'probe_count': [4, 4], 'speed': 500.0, 'move_check_distance': 5.0}, 'gcode_macro _klicky_status_ready': {'gcode': '\n{% if printer[\'gcode_macro status_ready\'] is defined %}\n_KlickyDebug msg="_klicky_status_ready activating the LED STATUS_READY"\nSTATUS_READY\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _klicky_check_variables_version': {'gcode': '\n{% set version = printer["gcode_macro _User_Variables"].version|default(0) %}\n{% if version != 1 %}\n{ action_raise_error("Please update your klicky variables, there are some functionality changes") }\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro _klicky_status_leveling': {'gcode': '\n{% if printer[\'gcode_macro status_leveling\'] is defined %}\n_KlickyDebug msg="_klicky_status_leveling activating the LED STATUS_LEVELING"\nSTATUS_LEVELING\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}\n{% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'description': 'Pause the actual running print', 'variable_extrude': '1.0', 'rename_existing': 'PAUSE_BASE'}, 'gcode_macro attach_probe': {'gcode': '\n{% set goback  = params.BACK|default(0) %}\n{% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}\n{% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n{% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}\n{% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}\n{% set dockmove_z = printer["gcode_macro _User_Variables"].dockmove_z|default(0) %}\n{% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}\n{% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}\n{% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}\n{% set attachmove_x = printer["gcode_macro _User_Variables"].attachmove_x|default(0) %}\n{% set attachmove_y = printer["gcode_macro _User_Variables"].attachmove_y|default(0) %}\n{% set attachmove_z = printer["gcode_macro _User_Variables"].attachmove_z|default(0) %}\n{% set attachmove2_x = printer["gcode_macro _User_Variables"].attachmove2_x|default(0) %}\n{% set attachmove2_y = printer["gcode_macro _User_Variables"].attachmove2_y|default(0) %}\n{% set attachmove2_z = printer["gcode_macro _User_Variables"].attachmove2_z|default(0) %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z %}\n{% set enable_z_hop = printer["gcode_macro _User_Variables"].enable_z_hop %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set dock_feedrate = printer["gcode_macro _User_Variables"].dock_speed * 60 %}\n{% set release_feedrate = printer["gcode_macro _User_Variables"].release_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n_entry_point function=Attach_Probe\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n_KlickyDebug msg="Attach_Probe Axis homed"\n{% elif not probe_attached and not probe_lock %}\n_KlickyDebug msg="Attach_Probe going to attach probe"\n{% if verbose %}\n{ action_respond_info("Attaching Probe") }\n{% endif %}\n_KLICKY_STATUS_BUSY\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% if not enable_z_hop %}\n_KlickyDebug msg="Attach_Probe z_hop disabled"\n{% set safe_z = 0 %}\n{% endif %}\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm"\n{% if verbose %}\n{ action_respond_info("moving to a safe Z distance") }\n{% endif %}\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero, duplicate?") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n{% if printer.toolhead.position.z < safe_z %}\n_KlickyDebug msg="Attach_Probe toolhead too low, raising it by {safe_z}mm, duplicate?"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Umbilical_Path\n_entry_point function=Attach_Probe_intern\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove_y|int - attachmove2_y} F{travel_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int - attachmove2_z|int} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving near the dock with G0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{dock_feedrate}\n{% endif %}\n_DeployKlickyDock\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 Z{docklocation_z} F{dock_feedrate}"\nG0 Z{docklocation_z} F{dock_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}"\nG0 X{docklocation_x|int - attachmove2_x|int} Y{docklocation_y|int - attachmove2_y} F{dock_feedrate}\n_KlickyDebug msg="Attach_Probe moving to the dock with G0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}"\nG0 X{docklocation_x} Y{docklocation_y} F{dock_feedrate}\n{% if docklocation_z != -128 %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}"\nG0 Z{docklocation_z|int - attachmove_z|int} F{z_drop_feedrate}\n{% endif %}\n_KlickyDebug msg="Attach_Probe moving from the dock to G0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}"\nG0 X{docklocation_x|int - attachmove_x|int} Y{docklocation_y|int - attachmove_y|int} F{release_feedrate}\n_RetractKlickyDock\n{% if ((printer.toolhead.position.z < safe_z) or (docklocation_z != -128 and docklocation_z < safe_z ))%}\n_KlickyDebug msg="Attach_Probe moving to a safe Z position: G0 Z{safe_z} F{z_drop_feedrate} from {printer.toolhead.position.z}"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_Park_Toolhead\n_CheckProbe action=attach\n_exit_point function=Attach_Probe_intern move={goback}\n_KLICKY_STATUS_READY\n{% elif probe_lock %}\n{% if verbose %}\n{ action_respond_info("Probe locked!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe locked not attaching probe"\n_CheckProbe action=query\n{% else %}\n{% if verbose %}\n{ action_respond_info("Probe already attached!") }\n{% endif %}\n_KlickyDebug msg="Attach_Probe probe already attached, doing nothing"\n_CheckProbe action=query\n{% endif %}\n_exit_point function=Attach_Probe', 'description': 'Attaches Klicky Probe'}, 'gcode_macro probe_accuracy': {'gcode': '\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set max_x = printer["gcode_macro _User_Variables"].max_bed_x|float %}\n{% set max_y = printer["gcode_macro _User_Variables"].max_bed_y|float %}\n{% set probe_offset_x = printer[\'configfile\'].config["probe"]["x_offset"]|float %}\n{% set probe_offset_y = printer[\'configfile\'].config["probe"]["y_offset"]|float %}\n{% if not \'xyz\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X, Y and Z Axis First!") }\n{% endif %}\n_KlickyDebug msg="probe_accuracy Axis homed"\n_KlickyDebug msg="probe_accuracy Variables max_x={max_x},max_y={max_y},probe_offset_x={probe_offset_x},probe_offset_y={probe_offset_y}"\n_entry_point function=PROBE_ACCURACY\n{% if printer[\'gcode_move\'].position.y > (max_y - probe_offset_y)\nor printer[\'gcode_move\'].position.y < - probe_offset_y\nor printer[\'gcode_move\'].position.x > (max_x - probe_offset_x)\nor printer[\'gcode_move\'].position.x < - probe_offset_x %}\n{ action_raise_error("Must perform PROBE_ACCURACY with the probe above the BED, check klicky_variables bed size!") }\n{% endif%}\n_CheckProbe action=query\nAttach_Probe back=1\n_KlickyDebug msg="probe_accuracy calling klipper probe accuracy"\n_PROBE_ACCURACY {% for p in params\n%}{\'%s=%s \' % (p, params[p])}{%\nendfor %}\nDock_Probe back=1\n_exit_point function=PROBE_ACCURACY move=1', 'description': 'Probe Z-height accuracy at current XY position with klicky automount', 'rename_existing': '_PROBE_ACCURACY'}, 'gcode_macro _probe_variables': {'description': 'G-Code macro', 'variable_z_endstop_x': '0', 'variable_z_endstop_y': '0', 'gcode': '', 'variable_probe_attached': 'False', 'variable_probe_lock': 'False', 'variable_probe_state': 'False'}, 'gcode_macro _home_z': {'gcode': '\n{% set z_endstop_x = printer["gcode_macro _Probe_Variables"].z_endstop_x %}\n{% set z_endstop_y = printer["gcode_macro _Probe_Variables"].z_endstop_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% set z_drop_feedrate = printer["gcode_macro _User_Variables"].z_drop_speed * 60 %}\n{% set verbose = printer["gcode_macro _User_Variables"].verbose %}\n_entry_point function=Home_Z\n{% if not \'xy\' in printer.toolhead.homed_axes %}\n{ action_raise_error("Must Home X and Y Axis First!") }\n{% else %}\n_KlickyDebug msg="_Home_Z XY Axis homed"\n{% if not \'z\' in printer.toolhead.homed_axes %}\n{% if verbose %}\n{ action_respond_info("Resetting Z position to zero") }\n{% endif %}\n_KlickyDebug msg="_Home_Z Z not homed, setting position as X=Y=Z=0"\nSET_KINEMATIC_POSITION Z=0\n{% endif %}\n_KlickyDebug msg="_Home_Z moving to Z endstop position G0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}"\nG0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}\n_KlickyDebug msg="_Home_Z Homing Z G28 Z"\nG28 Z0\n_KlickyDebug msg="_Home_Z toolhead too low, raising it to {safe_z}mm"\nG0 Z{safe_z} F{z_drop_feedrate}\n{% endif %}\n_exit_point function=Home_Z', 'description': 'G-Code macro'}, 'gcode_macro lift_z': {'gcode': '\nG91\nG0 Z10 F2000\nG90', 'description': 'G-Code macro'}, 'gcode_macro _homing_variables': {'gcode': '\n{% set reset  = params.RESET|default(0) %}\n{% if reset %}\nSET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }\n{% endif %}', 'description': 'G-Code macro'}, 'verify_heater heater_bed': {'max_error': 120.0, 'check_gain_time': 60.0, 'heating_gain': 2.0, 'hysteresis': 5.0}, 'extruder': {'control': 'pid', 'pullup_resistor': 4700.0, 'max_extrude_only_velocity': 75.0, 'gear_ratio': [[50.0, 10.0]], 'max_extrude_only_distance': 1400.0, 'sensor_type': 'ATC Semitec 104NT-4-R025H42G', 'min_temp': 0.0, 'enable_pin': '!P1.16', 'pressure_advance': 0.025, 'max_extrude_cross_section': 0.85, 'pwm_cycle_time': 0.1, 'dir_pin': '!P1.14', 'pid_kp': 20.167, 'instantaneous_corner_velocity': 1.0, 'full_steps_per_rotation': 200, 'heater_pin': 'P2.7', 'pressure_advance_smooth_time': 0.03, 'smooth_time': 1.0, 'pid_ki': 1.386, 'filament_diameter': 1.75, 'sensor_pin': 'P0.24', 'nozzle_diameter': 0.4, 'pid_kd': 73.358, 'rotation_distance': 22.67895, 'step_pin': 'P1.15', 'inline_resistor': 0.0, 'max_power': 1.0, 'microsteps': 16, 'min_extrude_temp': 170.0, 'max_extrude_only_accel': 1500.0, 'max_temp': 280.0}, 'gcode_macro print_end': {'gcode': '\nM400                           ; wait for moves to finish\nG91 ;Relative positioning\nG1 E-2 F2700 ;Retract a bit\nG1 E-2 Z0.2 F2400 ;Retract and raise Z\nG1 X5 Y5 F3000 ;Wipe out\nG1 Z10 ;Raise Z more\nG90 ;Absolute positioning\nG28 X Y ;Present print\nM106 S0 ;Turn-off fan\nM104 S0 ;Turn-off hotend\nM140 S0 ;Turn-off bed\nM84 X Y E ;Disable all steppers but Z', 'description': 'G-Code macro'}, 'gcode_macro _umbilical_path': {'gcode': '\n{% set umbilical = printer["gcode_macro _User_Variables"].umbilical %}\n{% set umbilical_x = printer["gcode_macro _User_Variables"].umbilical_x %}\n{% set umbilical_y = printer["gcode_macro _User_Variables"].umbilical_y %}\n{% set safe_z = printer["gcode_macro _User_Variables"].safe_z|float %}\n{% set travel_feedrate = printer["gcode_macro _User_Variables"].travel_speed * 60 %}\n{% if umbilical %}\n_entry_point function=Umbilical_Path\n_KlickyDebug msg="_Umbilical_Path moving to G0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}"\nG0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}\n_exit_point function=Umbilical_Path\n{% endif %}', 'description': 'G-Code macro'}}, 'save_config_pending': False}}
2022-11-16 23:22:04,268 [printer.py:reinit()] - Klipper version: v0.10.0-631-g8a065287
2022-11-16 23:22:04,268 [printer.py:reinit()] - # Extruders: 1
2022-11-16 23:22:04,268 [printer.py:reinit()] - # Temperature devices: 2
2022-11-16 23:22:04,268 [printer.py:reinit()] - # Fans: 1
2022-11-16 23:22:04,268 [printer.py:reinit()] - # Output pins: 1
2022-11-16 23:22:04,269 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe: {'objects': {'bed_mesh': ['profile_name', 'mesh_max', 'mesh_min', 'probed_matrix', 'profiles'], 'configfile': ['config'], 'display_status': ['progress', 'message'], 'fan': ['speed'], 'gcode_move': ['extrude_factor', 'gcode_position', 'homing_origin', 'speed_factor', 'speed'], 'idle_timeout': ['state'], 'pause_resume': ['is_paused'], 'print_stats': ['print_duration', 'total_duration', 'filament_used', 'filename', 'state', 'message', 'info'], 'toolhead': ['homed_axes', 'estimated_print_time', 'print_time', 'position', 'extruder', 'max_accel', 'max_accel_to_decel', 'max_velocity', 'square_corner_velocity'], 'virtual_sdcard': ['file_position', 'is_active', 'progress'], 'webhooks': ['state', 'state_message'], 'firmware_retraction': ['retract_length', 'retract_speed', 'unretract_extra_length', 'unretract_speed'], 'motion_report': ['live_position', 'live_velocity', 'live_extruder_velocity'], 'exclude_object': ['current_object', 'objects', 'excluded_objects'], 'extruder': ['target', 'temperature', 'pressure_advance', 'smooth_time', 'power'], 'heater_bed': ['target', 'temperature', 'power'], 'temperature_sensor zasilacz': ['target', 'temperature', 'power'], 'filament_switch_sensor RunoutSensor': ['enabled', 'filament_detected'], 'output_pin LED': ['value']}}
2022-11-16 23:22:04,272 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&extruder&heater_bed&temperature_sensor zasilacz&fan&filament_switch_sensor RunoutSensor&output_pin LED
2022-11-16 23:22:04,580 [KlippyRest.py:send_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2022-11-16 23:22:04,590 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'temperature_sensor zasilacz', 'extruder']
2022-11-16 23:22:04,591 [files.py:initialize()] - Gcodes path: /home/pi/gcode_files
2022-11-16 23:22:04,591 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2022-11-16 23:22:04,592 [screen.py:init_printer()] - Printer initialized
2022-11-16 23:22:04,595 [screen.py:_load_panel()] - Loading panel: main_menu
2022-11-16 23:22:04,595 [screen.py:_load_panel()] - Panel path: /home/pi/KlipperScreen/panels/main_menu.py
2022-11-16 23:22:04,620 [main_menu.py:initialize()] - ### Making MainMenu
2022-11-16 23:22:04,665 [main_menu.py:add_device()] - Adding device: heater_bed
2022-11-16 23:22:04,670 [main_menu.py:add_device()] - Adding device: temperature_sensor zasilacz
2022-11-16 23:22:04,674 [main_menu.py:add_device()] - Adding device: extruder
2022-11-16 23:22:04,682 [menu.py:arrangeMenuItems()] - > homing
2022-11-16 23:22:04,688 [menu.py:arrangeMenuItems()] - > temperature
2022-11-16 23:22:04,689 [menu.py:arrangeMenuItems()] - > actions
2022-11-16 23:22:04,689 [menu.py:arrangeMenuItems()] - > config
2022-11-16 23:22:04,690 [menu.py:arrangeMenuItems()] - > print
2022-11-16 23:22:04,691 [screen.py:show_panel()] - Attaching panel main_panel
2022-11-16 23:22:04,692 [screen.py:show_panel()] - Showing back. count: 0
2022-11-16 23:22:04,702 [base_panel.py:show_heaters()] - Titlebar name type: None
2022-11-16 23:22:04,708 [screen.py:show_panel()] - Current panel hierarchy: ['main_panel']
2022-11-16 23:22:04,709 [base_panel.py:show_heaters()] - Titlebar name type: None
2022-11-16 23:22:04,716 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe: {'objects': {'bed_mesh': ['profile_name', 'mesh_max', 'mesh_min', 'probed_matrix', 'profiles'], 'configfile': ['config'], 'display_status': ['progress', 'message'], 'fan': ['speed'], 'gcode_move': ['extrude_factor', 'gcode_position', 'homing_origin', 'speed_factor', 'speed'], 'idle_timeout': ['state'], 'pause_resume': ['is_paused'], 'print_stats': ['print_duration', 'total_duration', 'filament_used', 'filename', 'state', 'message', 'info'], 'toolhead': ['homed_axes', 'estimated_print_time', 'print_time', 'position', 'extruder', 'max_accel', 'max_accel_to_decel', 'max_velocity', 'square_corner_velocity'], 'virtual_sdcard': ['file_position', 'is_active', 'progress'], 'webhooks': ['state', 'state_message'], 'firmware_retraction': ['retract_length', 'retract_speed', 'unretract_extra_length', 'unretract_speed'], 'motion_report': ['live_position', 'live_velocity', 'live_extruder_velocity'], 'exclude_object': ['current_object', 'objects', 'excluded_objects'], 'extruder': ['target', 'temperature', 'pressure_advance', 'smooth_time', 'power'], 'heater_bed': ['target', 'temperature', 'power'], 'temperature_sensor zasilacz': ['target', 'temperature', 'power'], 'filament_switch_sensor RunoutSensor': ['enabled', 'filament_detected'], 'output_pin LED': ['value']}}
2022-11-16 23:47:08,769 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "create_file",
  "item": {
    "modified": 1668642428.7587855,
    "size": 2098,
    "permissions": "rw",
    "path": "autocommit.sh",
    "root": "config"
  }
}
2022-11-16 23:47:43,313 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "create_file",
  "item": {
    "modified": 1668642463.2987955,
    "size": 1024,
    "permissions": "rw",
    "path": ".autocommit.sh.swp",
    "root": "config"
  }
}
2022-11-16 23:47:47,257 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "delete_file",
  "item": {
    "modified": 1668642467.238796,
    "size": 1024,
    "permissions": "rw",
    "path": ".autocommit.sh.swp",
    "root": "config"
  }
}
2022-11-16 23:47:47,257 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "create_file",
  "item": {
    "modified": 1668642467.238796,
    "size": 1024,
    "permissions": "rw",
    "path": ".autocommit.sh.swp",
    "root": "config"
  }
}
2022-11-16 23:48:59,044 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "modify_file",
  "item": {
    "modified": 1668642539.0287867,
    "size": 2094,
    "permissions": "rw",
    "path": "autocommit.sh",
    "root": "config"
  }
}
2022-11-16 23:49:00,832 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "delete_file",
  "item": {
    "size": 0,
    "modified": 0,
    "path": ".autocommit.sh.swp",
    "root": "config"
  }
}
2022-11-16 23:50:32,305 [screen.py:_websocket_callback()] - Filelist changed: {
  "action": "delete_file",
  "item": {
    "size": 0,
    "modified": 0,
    "path": "autocommit.sh",
    "root": "config"
  }
}
2022-11-17 00:22:03,377 [screen.py:show_screensaver()] - Showing Screensaver
